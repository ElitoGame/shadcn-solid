{
	"name": "tabs",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "tabs.tsx",
			"content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tTabsContentProps,\r\n\tTabsIndicatorProps,\r\n\tTabsListProps,\r\n\tTabsRootProps,\r\n\tTabsTriggerProps,\r\n} from \"@kobalte/core/tabs\";\r\nimport { Tabs as TabsPrimitive } from \"@kobalte/core/tabs\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ValidComponent, VoidProps } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\ntype tabsProps<T extends ValidComponent = \"div\"> = TabsRootProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const Tabs = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive\r\n\t\t\tclass={cn(\"w-full data-[orientation=vertical]:flex\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsListProps<T extends ValidComponent = \"div\"> = TabsListProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const TabsList = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsListProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsListProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.List\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"relative flex w-full rounded-lg bg-muted p-1 text-muted-foreground data-[orientation=vertical]:flex-col data-[orientation=horizontal]:items-center data-[orientation=vertical]:items-stretch\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsContentProps<T extends ValidComponent = \"div\"> =\r\n\tTabsContentProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const TabsContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsContentProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Content\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"transition-shadow duration-200 focus-visible:outline-none focus-visible:ring-[1.5px] focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background data-[orientation=horizontal]:mt-2 data-[orientation=vertical]:ml-2\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsTriggerProps<T extends ValidComponent = \"button\"> =\r\n\tTabsTriggerProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const TabsTrigger = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, tabsTriggerProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsTriggerProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Trigger\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"peer relative z-10 inline-flex h-7 w-full items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium outline-none transition-colors disabled:pointer-events-none disabled:opacity-50 data-[selected]:text-foreground\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst tabsIndicatorVariants = cva(\r\n\t\"absolute transition-[transform,box-shadow] duration-200 outline-none\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tblock:\r\n\t\t\t\t\t\"data-[orientation=horizontal]:bottom-1 data-[orientation=horizontal]:left-0 data-[orientation=vertical]:right-1 data-[orientation=vertical]:top-0 data-[orientation=horizontal]:h-[calc(100%-0.5rem)] data-[orientation=vertical]:w-[calc(100%-0.5rem)] bg-background shadow rounded-md peer-focus-visible:ring-[1.5px] peer-focus-visible:ring-ring peer-focus-visible:ring-offset-2 peer-focus-visible:ring-offset-background peer-focus-visible:outline-none\",\r\n\t\t\t\tunderline:\r\n\t\t\t\t\t\"data-[orientation=horizontal]:-bottom-[1px] data-[orientation=horizontal]:left-0 data-[orientation=vertical]:-right-[1px] data-[orientation=vertical]:top-0 data-[orientation=horizontal]:h-[2px] data-[orientation=vertical]:w-[2px] bg-primary\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"block\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ntype tabsIndicatorProps<T extends ValidComponent = \"div\"> = VoidProps<\r\n\tTabsIndicatorProps<T> &\r\n\t\tVariantProps<typeof tabsIndicatorVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t}\r\n>;\r\n\r\nexport const TabsIndicator = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsIndicatorProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsIndicatorProps, [\r\n\t\t\"class\",\r\n\t\t\"variant\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Indicator\r\n\t\t\tclass={cn(tabsIndicatorVariants({ variant: local.variant }), local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
		}
	],
	"type": "components:ui"
}
