{
  "name": "accordion",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type {\r\n\tAccordionContentProps,\r\n\tAccordionItemProps,\r\n\tAccordionTriggerProps,\r\n} from \"@kobalte/core/accordion\";\r\nimport { Accordion as AccordionPrimitive } from \"@kobalte/core/accordion\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport { type ParentProps, type ValidComponent, splitProps } from \"solid-js\";\r\n\r\nexport const Accordion = AccordionPrimitive;\r\n\r\ntype accordionItemProps<T extends ValidComponent = \"div\"> =\r\n\tAccordionItemProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const AccordionItem = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, accordionItemProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as accordionItemProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<AccordionPrimitive.Item class={cn(\"border-b\", local.class)} {...rest} />\r\n\t);\r\n};\r\n\r\ntype accordionTriggerProps<T extends ValidComponent = \"button\"> = ParentProps<\r\n\tAccordionTriggerProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const AccordionTrigger = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, accordionTriggerProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as accordionTriggerProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<AccordionPrimitive.Header class=\"flex\" as=\"div\">\r\n\t\t\t<AccordionPrimitive.Trigger\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-shadow hover:underline focus-visible:outline-none focus-visible:ring-[1.5px] focus-visible:ring-ring [&[data-expanded]>svg]:rotate-180\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tclass=\"h-4 w-4 text-muted-foreground transition-transform duration-200\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\td=\"m6 9l6 6l6-6\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<title>Arrow</title>\r\n\t\t\t\t</svg>\r\n\t\t\t</AccordionPrimitive.Trigger>\r\n\t\t</AccordionPrimitive.Header>\r\n\t);\r\n};\r\n\r\ntype accordionContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tAccordionContentProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const AccordionContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, accordionContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as accordionContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<AccordionPrimitive.Content\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"animate-accordion-up overflow-hidden text-sm data-[expanded]:animate-accordion-down\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<div class=\"pb-4 pt-0\">{local.children}</div>\r\n\t\t</AccordionPrimitive.Content>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}