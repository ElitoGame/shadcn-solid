{
  "name": "alert-dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "alert-dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type {\r\n\tAlertDialogCloseButtonProps,\r\n\tAlertDialogContentProps,\r\n\tAlertDialogDescriptionProps,\r\n\tAlertDialogTitleProps,\r\n} from \"@kobalte/core/alert-dialog\";\r\nimport { AlertDialog as AlertDialogPrimitive } from \"@kobalte/core/alert-dialog\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\nimport { buttonVariants } from \"./button\";\r\n\r\nexport const AlertDialog = AlertDialogPrimitive;\r\nexport const AlertDialogTrigger = AlertDialogPrimitive.Trigger;\r\n\r\ntype alertDialogContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tAlertDialogContentProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const AlertDialogContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, alertDialogContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as alertDialogContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<AlertDialogPrimitive.Portal>\r\n\t\t\t<AlertDialogPrimitive.Overlay\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"fixed inset-0 z-50 bg-background/80 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\",\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<AlertDialogPrimitive.Content\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg data-[closed]:duration-200 data-[expanded]:duration-200 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95 data-[closed]:slide-out-to-left-1/2 data-[closed]:slide-out-to-top-[48%] data-[expanded]:slide-in-from-left-1/2 data-[expanded]:slide-in-from-top-[48%] sm:rounded-lg md:w-full\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t</AlertDialogPrimitive.Content>\r\n\t\t</AlertDialogPrimitive.Portal>\r\n\t);\r\n};\r\n\r\nexport const AlertDialogHeader = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const AlertDialogFooter = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype alertDialogTitleProps<T extends ValidComponent = \"h2\"> =\r\n\tAlertDialogTitleProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const AlertDialogTitle = <T extends ValidComponent = \"h2\">(\r\n\tprops: PolymorphicProps<T, alertDialogTitleProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as alertDialogTitleProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<AlertDialogPrimitive.Title\r\n\t\t\tclass={cn(\"text-lg font-semibold\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype alertDialogDescriptionProps<T extends ValidComponent = \"p\"> =\r\n\tAlertDialogDescriptionProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const AlertDialogDescription = <T extends ValidComponent = \"p\">(\r\n\tprops: PolymorphicProps<T, alertDialogDescriptionProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as alertDialogDescriptionProps, [\r\n\t\t\"class\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<AlertDialogPrimitive.Description\r\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype alertDialogCloseProps<T extends ValidComponent = \"button\"> =\r\n\tAlertDialogCloseButtonProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const AlertDialogClose = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, alertDialogCloseProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<AlertDialogPrimitive.CloseButton\r\n\t\t\tclass={cn(\r\n\t\t\t\tbuttonVariants({\r\n\t\t\t\t\tvariant: \"outline\",\r\n\t\t\t\t}),\r\n\t\t\t\t\"mt-2 md:mt-0\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const AlertDialogAction = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, alertDialogCloseProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<AlertDialogPrimitive.CloseButton\r\n\t\t\tclass={cn(buttonVariants(), local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}