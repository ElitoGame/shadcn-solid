{
	"name": "toast",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "toast.tsx",
			"content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tToastDescriptionProps,\r\n\tToastListProps,\r\n\tToastRegionProps,\r\n\tToastRootProps,\r\n\tToastTitleProps,\r\n} from \"@kobalte/core/toast\";\r\nimport { Toast as ToastPrimitive } from \"@kobalte/core/toast\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type {\r\n\tComponentProps,\r\n\tValidComponent,\r\n\tVoidComponent,\r\n\tVoidProps,\r\n} from \"solid-js\";\r\nimport { mergeProps, splitProps } from \"solid-js\";\r\nimport { Portal } from \"solid-js/web\";\r\n\r\nexport const toastVariants = cva(\r\n\t\"group pointer-events-auto relative flex flex-col gap-3 w-full items-center justify-between overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-y-0 data-[swipe=end]:translate-y-[var(--kb-toast-swipe-end-y)] data-[swipe=move]:translate-y-[--kb-toast-swipe-move-y] data-[swipe=move]:transition-none data-[opened]:animate-in data-[closed]:animate-out data-[swipe=end]:animate-out data-[closed]:fade-out-80 data-[closed]:slide-out-to-top-full data-[closed]:sm:slide-out-to-bottom-full data-[opened]:slide-in-from-top-full data-[opened]:sm:slide-in-from-bottom-full\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tdefault: \"border bg-background\",\r\n\t\t\t\tdestructive:\r\n\t\t\t\t\t\"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"default\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ntype toastProps<T extends ValidComponent = \"li\"> = ToastRootProps<T> &\r\n\tVariantProps<typeof toastVariants> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const Toast = <T extends ValidComponent = \"li\">(\r\n\tprops: PolymorphicProps<T, toastProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toastProps, [\"class\", \"variant\"]);\r\n\r\n\treturn (\r\n\t\t<ToastPrimitive\r\n\t\t\tclass={cn(toastVariants({ variant: local.variant }), local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype toastTitleProps<T extends ValidComponent = \"div\"> = ToastTitleProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const ToastTitle = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, toastTitleProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toastTitleProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<ToastPrimitive.Title\r\n\t\t\tclass={cn(\"text-sm font-semibold [&+div]:text-xs\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype toastDescriptionProps<T extends ValidComponent = \"div\"> =\r\n\tToastDescriptionProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const ToastDescription = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, toastDescriptionProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toastDescriptionProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<ToastPrimitive.Description\r\n\t\t\tclass={cn(\"text-sm opacity-90\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype toastRegionProps<T extends ValidComponent = \"div\"> =\r\n\tToastRegionProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const ToastRegion = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, toastRegionProps<T>>,\r\n) => {\r\n\tconst merge = mergeProps<toastRegionProps[]>(\r\n\t\t{\r\n\t\t\tswipeDirection: \"down\",\r\n\t\t},\r\n\t\tprops,\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Portal>\r\n\t\t\t<ToastPrimitive.Region {...merge} />\r\n\t\t</Portal>\r\n\t);\r\n};\r\n\r\ntype toastListProps<T extends ValidComponent = \"ol\"> = VoidProps<\r\n\tToastListProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const ToastList = <T extends ValidComponent = \"ol\">(\r\n\tprops: PolymorphicProps<T, toastListProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toastListProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<ToastPrimitive.List\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const ToastContent = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\", \"children\"]);\r\n\r\n\treturn (\r\n\t\t<div class={cn(\"flex w-full flex-col\", local.class)} {...rest}>\r\n\t\t\t<div>{local.children}</div>\r\n\t\t\t<ToastPrimitive.CloseButton class=\"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50\">\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tclass=\"h-4 w-4\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\td=\"M18 6L6 18M6 6l12 12\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<title>Close</title>\r\n\t\t\t\t</svg>\r\n\t\t\t</ToastPrimitive.CloseButton>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const ToastProgress: VoidComponent = () => {\r\n\treturn (\r\n\t\t<ToastPrimitive.ProgressTrack class=\"h-1 w-full overflow-hidden rounded-xl bg-primary/20 group-[.destructive]:bg-background/20\">\r\n\t\t\t<ToastPrimitive.ProgressFill class=\"h-full w-[--kb-toast-progress-fill-width] bg-primary transition-all duration-150 ease-linear group-[.destructive]:bg-destructive-foreground\" />\r\n\t\t</ToastPrimitive.ProgressTrack>\r\n\t);\r\n};\r\n"
		}
	],
	"type": "components:ui"
}
