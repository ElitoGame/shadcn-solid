{
	"name": "menubar",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "menubar.tsx",
			"content": "import { cn } from \"@/libs/cn\";\r\nimport type {\r\n\tMenubarCheckboxItemProps,\r\n\tMenubarContentProps,\r\n\tMenubarItemLabelProps,\r\n\tMenubarItemProps,\r\n\tMenubarMenuProps,\r\n\tMenubarRadioItemProps,\r\n\tMenubarRootProps,\r\n\tMenubarSeparatorProps,\r\n\tMenubarSubContentProps,\r\n\tMenubarSubTriggerProps,\r\n\tMenubarTriggerProps,\r\n} from \"@kobalte/core/menubar\";\r\nimport { Menubar as MenubarPrimitive } from \"@kobalte/core/menubar\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { mergeProps, splitProps } from \"solid-js\";\r\n\r\nexport const MenubarSub = MenubarPrimitive.Sub;\r\nexport const MenubarRadioGroup = MenubarPrimitive.RadioGroup;\r\n\r\ntype menubarProps<T extends ValidComponent = \"div\"> = MenubarRootProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const Menubar = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const MenubarMenu = (props: MenubarMenuProps) => {\r\n\tconst merge = mergeProps<MenubarMenuProps[]>({ gutter: 8, shift: -4 }, props);\r\n\r\n\treturn <MenubarPrimitive.Menu {...merge} />;\r\n};\r\n\r\ntype menubarTriggerProps<T extends ValidComponent = \"button\"> =\r\n\tMenubarTriggerProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const MenubarTrigger = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, menubarTriggerProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarTriggerProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.Trigger\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[expanded]:bg-accent data-[expanded]:text-accent-foreground\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype menubarSubTriggerProps<T extends ValidComponent = \"button\"> = ParentProps<\r\n\tMenubarSubTriggerProps<T> & {\r\n\t\tclass?: string;\r\n\t\tinset?: boolean;\r\n\t}\r\n>;\r\n\r\nexport const MenubarSubTrigger = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, menubarSubTriggerProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarSubTriggerProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t\t\"inset\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.SubTrigger\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[expanded]:bg-accent data-[expanded]:text-accent-foreground\",\r\n\t\t\t\tlocal.inset && \"pl-8\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{local.children}\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth=\"1em\"\r\n\t\t\t\theight=\"1em\"\r\n\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\tclass=\"ml-auto h-4 w-4\"\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\td=\"m9 6l6 6l-6 6\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Arrow</title>\r\n\t\t\t</svg>\r\n\t\t</MenubarPrimitive.SubTrigger>\r\n\t);\r\n};\r\n\r\ntype menubarSubContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tMenubarSubContentProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const MenubarSubContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarSubContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarSubContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.Portal>\r\n\t\t\t<MenubarPrimitive.SubContent\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"z-50 min-w-[8rem] origin-[--kb-menu-content-transform-origin] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg outline-none data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t</MenubarPrimitive.SubContent>\r\n\t\t</MenubarPrimitive.Portal>\r\n\t);\r\n};\r\n\r\ntype menubarContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tMenubarContentProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const MenubarContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.Portal>\r\n\t\t\t<MenubarPrimitive.Content\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"z-50 min-w-[12rem] origin-[--kb-menu-content-transform-origin] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md outline-none data-[expanded]:animate-in data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t</MenubarPrimitive.Content>\r\n\t\t</MenubarPrimitive.Portal>\r\n\t);\r\n};\r\n\r\ntype menubarItemProps<T extends ValidComponent = \"div\"> =\r\n\tMenubarItemProps<T> & {\r\n\t\tclass?: string;\r\n\t\tinset?: boolean;\r\n\t};\r\n\r\nexport const MenubarItem = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarItemProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarItemProps, [\r\n\t\t\"class\",\r\n\t\t\"inset\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.Item\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n\t\t\t\tlocal.inset && \"pl-8\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype menubarItemLabelProps<T extends ValidComponent = \"div\"> =\r\n\tMenubarItemLabelProps<T> & {\r\n\t\tclass?: string;\r\n\t\tinset?: boolean;\r\n\t};\r\n\r\nexport const MenubarItemLabel = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarItemLabelProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarItemLabelProps, [\r\n\t\t\"class\",\r\n\t\t\"inset\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.ItemLabel\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"px-2 py-1.5 text-sm font-semibold\",\r\n\t\t\t\tlocal.inset && \"pl-8\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype menubarSeparatorProps<T extends ValidComponent = \"hr\"> =\r\n\tMenubarSeparatorProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const MenubarSeparator = <T extends ValidComponent = \"hr\">(\r\n\tprops: PolymorphicProps<T, menubarSeparatorProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarSeparatorProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.Separator\r\n\t\t\tclass={cn(\"-mx-1 my-1 h-px bg-muted\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype menubarCheckboxItemProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tMenubarCheckboxItemProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const MenubarCheckboxItem = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarCheckboxItemProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarCheckboxItemProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.CheckboxItem\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tclass=\"h-4 w-4\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\td=\"m5 12l5 5L20 7\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<title>Checkbox</title>\r\n\t\t\t\t</svg>\r\n\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t{local.children}\r\n\t\t</MenubarPrimitive.CheckboxItem>\r\n\t);\r\n};\r\n\r\ntype menubarRadioItemProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tMenubarRadioItemProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const MenubarRadioItem = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, menubarRadioItemProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as menubarRadioItemProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<MenubarPrimitive.RadioItem\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tclass=\"h-2 w-2\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<g\r\n\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<path d=\"M0 0h24v24H0z\" />\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\td=\"M7 3.34a10 10 0 1 1-4.995 8.984L2 12l.005-.324A10 10 0 0 1 7 3.34\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t<title>Radio</title>\r\n\t\t\t\t</svg>\r\n\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t{local.children}\r\n\t\t</MenubarPrimitive.RadioItem>\r\n\t);\r\n};\r\n\r\nexport const MenubarShortcut = (props: ComponentProps<\"span\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
		}
	],
	"type": "components:ui"
}
