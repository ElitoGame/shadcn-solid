{
	"name": "tabs",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "tabs.tsx",
			"content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tTabsContentProps,\r\n\tTabsIndicatorProps,\r\n\tTabsListProps,\r\n\tTabsRootProps,\r\n\tTabsTriggerProps,\r\n} from \"@kobalte/core/tabs\";\r\nimport { Tabs as TabsPrimitive } from \"@kobalte/core/tabs\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ValidComponent, VoidProps } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\ntype tabsProps<T extends ValidComponent = \"div\"> = TabsRootProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const Tabs = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive\r\n\t\t\tclass={cn(\"w-full data-[orientation=vertical]:flex\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsListProps<T extends ValidComponent = \"div\"> = TabsListProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const TabsList = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsListProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsListProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.List\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"relative flex rounded-lg bg-muted p-1 text-muted-foreground data-[orientation=vertical]:(flex-col items-stretch) data-[orientation=horizontal]:items-center w-full\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsContentProps<T extends ValidComponent = \"div\"> =\r\n\tTabsContentProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const TabsContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsContentProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Content\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"data-[orientation=vertical]:ml-2 data-[orientation=horizontal]:mt-2 transition-shadow duration-200 focus-visible:(ring-offset-background outline-none ring-1.5 ring-ring ring-offset-2)\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype tabsTriggerProps<T extends ValidComponent = \"button\"> =\r\n\tTabsTriggerProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const TabsTrigger = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, tabsTriggerProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsTriggerProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Trigger\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"w-full relative z-10 inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium transition-colors disabled:(pointer-events-none opacity-50) data-[selected]:text-foreground peer h-7 outline-none\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst tabsIndicatorVariants = cva(\r\n\t\"absolute transition-all transition-property-[box-shadow,transform] duration-200 outline-none\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tblock:\r\n\t\t\t\t\t\"data-[orientation=horizontal]:(bottom-1 left-0 h-[calc(100%-0.5rem)]) data-[orientation=vertical]:(right-1 top-0 w-[calc(100%-0.5rem)]) bg-background shadow rounded-md peer-focus-visible:(ring-1.5 ring-ring ring-offset-2 ring-offset-background outline-none)\",\r\n\t\t\t\tunderline:\r\n\t\t\t\t\t\"data-[orientation=horizontal]:(-bottom-[1px] left-0 h-2px) data-[orientation=vertical]:(-right-[1px] top-0 w-2px) bg-primary\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"block\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ntype tabsIndicatorProps<T extends ValidComponent = \"div\"> = VoidProps<\r\n\tTabsIndicatorProps<T> &\r\n\t\tVariantProps<typeof tabsIndicatorVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t}\r\n>;\r\n\r\nexport const TabsIndicator = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tabsIndicatorProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tabsIndicatorProps, [\r\n\t\t\"class\",\r\n\t\t\"variant\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<TabsPrimitive.Indicator\r\n\t\t\tclass={cn(tabsIndicatorVariants({ variant: local.variant }), local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
		}
	],
	"type": "components:ui"
}
