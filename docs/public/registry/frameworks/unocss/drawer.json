{
	"name": "drawer",
	"dependencies": ["@corvu/drawer"],
	"files": [
		{
			"name": "drawer.tsx",
			"content": "import { cn } from \"@/libs/cn\";\r\nimport type {\r\n\tContentProps,\r\n\tDescriptionProps,\r\n\tDynamicProps,\r\n\tLabelProps,\r\n} from \"@corvu/drawer\";\r\nimport DrawerPrimitive from \"@corvu/drawer\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const Drawer = DrawerPrimitive;\r\nexport const DrawerTrigger = DrawerPrimitive.Trigger;\r\nexport const DrawerClose = DrawerPrimitive.Close;\r\n\r\ntype drawerContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tContentProps<T> & {\r\n\t\tclass?: string;\r\n\t}\r\n>;\r\n\r\nexport const DrawerContent = <T extends ValidComponent = \"div\">(\r\n\tprops: DynamicProps<T, drawerContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as drawerContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\tconst ctx = DrawerPrimitive.useContext();\r\n\r\n\treturn (\r\n\t\t<DrawerPrimitive.Portal>\r\n\t\t\t<DrawerPrimitive.Overlay\r\n\t\t\t\tclass=\"fixed inset-0 z-50 data-[transitioning]:(transition-colors duration-200)\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t\"background-color\": `hsl(var(--background) / ${0.8 * ctx.openPercentage()})`,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<DrawerPrimitive.Content\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-xl border bg-background after:(absolute inset-x-0 top-full h-[50%] bg-inherit) data-[transitioning]:(transition-transform duration-200) md:select-none\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\r\n\t\t\t\t{local.children}\r\n\t\t\t</DrawerPrimitive.Content>\r\n\t\t</DrawerPrimitive.Portal>\r\n\t);\r\n};\r\n\r\nexport const DrawerHeader = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclass={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const DrawerFooter = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div class={cn(\"mt-auto flex flex-col gap-2 p-4\", local.class)} {...rest} />\r\n\t);\r\n};\r\n\r\ntype DrawerLabelProps = LabelProps & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const DrawerLabel = <T extends ValidComponent = \"h2\">(\r\n\tprops: DynamicProps<T, DrawerLabelProps>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as DrawerLabelProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<DrawerPrimitive.Label\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"text-lg font-semibold leading-none tracking-tight\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype DrawerDescriptionProps = DescriptionProps & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const DrawerDescription = <T extends ValidComponent = \"p\">(\r\n\tprops: DynamicProps<T, DrawerDescriptionProps>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as DrawerDescriptionProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<DrawerPrimitive.Description\r\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
		}
	],
	"type": "components:ui"
}
