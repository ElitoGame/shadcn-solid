{
  "name": "alert-dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "alert-dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tAlertDialogCloseButtonProps,\n\tAlertDialogContentProps,\n\tAlertDialogDescriptionProps,\n\tAlertDialogTitleProps,\n} from \"@kobalte/core/alert-dialog\";\nimport { AlertDialog as AlertDialogPrimitive } from \"@kobalte/core/alert-dialog\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\nimport { buttonVariants } from \"./button\";\n\nexport const AlertDialog = AlertDialogPrimitive;\nexport const AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\ntype alertDialogContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n\tAlertDialogContentProps<T> & {\n\t\tclass?: string;\n\t}\n>;\n\nexport const AlertDialogContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, alertDialogContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as alertDialogContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<AlertDialogPrimitive.Portal>\n\t\t\t<AlertDialogPrimitive.Overlay class=\"fixed inset-0 z-50 bg-background/80 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\" />\n\t\t\t<AlertDialogPrimitive.Content\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"[--adc-ring:theme(colors.zinc.200)] [--adc-bg:inherit]\",\n\t\t\t\t\t\"dark:[--adc-ring:theme(colors.zinc.800)] dark:[--adc-bg:theme(colors.zinc.900/50%)]\",\n\t\t\t\t\t\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg rounded-xl translate-x-[-50%] translate-y-[-50%] gap-4 ring-inset ring-1 ring-[--adc-ring] bg-[--adc-bg] p-6 shadow-lg\",\n\t\t\t\t\t\"data-[expanded]:duration-300 data-[expanded]:animate-in data-[expanded]:fade-in-0 data-[expanded]:zoom-in-95 data-[expanded]:slide-in-from-left-1/2 data-[expanded]:slide-in-from-top-[48%]\",\n\t\t\t\t\t\"data-[closed]:duration-300 data-[closed]:animate-out data-[closed]:fade-out-0 data-[closed]:zoom-out-95 data-[closed]:slide-out-to-left-1/2 data-[closed]:slide-out-to-top-[48%]\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t</AlertDialogPrimitive.Content>\n\t\t</AlertDialogPrimitive.Portal>\n\t);\n};\n\nexport const AlertDialogHeader = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col space-y-1 text-center sm:text-left\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const AlertDialogFooter = (props: ComponentProps<\"div\">) => {\n\tconst [local, rest] = splitProps(props, [\"class\"]);\n\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col-reverse gap-y-2 sm:flex-row sm:justify-end sm:gap-x-2\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype alertDialogTitleProps<T extends ValidComponent = \"h2\"> =\n\tAlertDialogTitleProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const AlertDialogTitle = <T extends ValidComponent = \"h2\">(\n\tprops: PolymorphicProps<T, alertDialogTitleProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as alertDialogTitleProps, [\"class\"]);\n\n\treturn (\n\t\t<AlertDialogPrimitive.Title\n\t\t\tclass={cn(\"text-xl font-semibold\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype alertDialogDescriptionProps<T extends ValidComponent = \"p\"> =\n\tAlertDialogDescriptionProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const AlertDialogDescription = <T extends ValidComponent = \"p\">(\n\tprops: PolymorphicProps<T, alertDialogDescriptionProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as alertDialogDescriptionProps, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<AlertDialogPrimitive.Description\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\ntype alertDialogCloseProps<T extends ValidComponent = \"button\"> =\n\tAlertDialogCloseButtonProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const AlertDialogClose = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, alertDialogCloseProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\n\n\treturn (\n\t\t<AlertDialogPrimitive.CloseButton\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tappearance: \"outline\",\n\t\t\t\t}),\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport const AlertDialogAction = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, alertDialogCloseProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\n\n\treturn (\n\t\t<AlertDialogPrimitive.CloseButton\n\t\t\tclass={cn(buttonVariants(), local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
    }
  ],
  "type": "components:ui"
}