{
  "name": "button",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { ButtonRootProps } from \"@kobalte/core/button\";\nimport { Button as ButtonPrimitive } from \"@kobalte/core/button\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const buttonVariants = cva(\n\t\"relative isolate inline-flex justify-center items-center font-medium text-sm rounded-lg py-2 px-6 outline-none appearance-none transition-[background-color,box-shadow,color,outline-color] duration-300 disabled:cursor-not-allowed focus-visible:outline focus-visible:outline-[--button-outline]\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: [\n\t\t\t\t\t\"[--button-text:theme(colors.blue.50)] [--button-bg:theme(colors.blue.500)] hover:[--button-bg:theme(colors.blue.600)] active:[--button-bg:theme(colors.blue.700)] [--button-outline:theme(colors.blue.500)]\",\n\t\t\t\t\t\"disabled:[--button-bg:theme(colors.blue.100)] disabled:[--button-text:theme(colors.blue.400)]\",\n\t\t\t\t\t\"dark:disabled:[--button-bg:theme(colors.blue.950)] dark:disabled:[--button-text:theme(colors.blue.700)]\",\n\t\t\t\t],\n\t\t\t\tdestructive: [\n\t\t\t\t\t\"[--button-text:theme(colors.red.50)] [--button-bg:theme(colors.red.500)] hover:[--button-bg:theme(colors.red.600)] active:[--button-bg:theme(colors.red.700)] [--button-outline:theme(colors.red.500)]\",\n\t\t\t\t\t\"disabled:[--button-bg:theme(colors.red.100)] disabled:[--button-text:theme(colors.red.400)]\",\n\t\t\t\t\t\"dark:disabled:[--button-bg:theme(colors.red.950)] dark:disabled:[--button-text:theme(colors.red.700)]\",\n\t\t\t\t],\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tbezel: [\n\t\t\t\t\t\"border-none text-[--button-text] bg-[--button-bg] shadow-sm disabled:shadow-none\",\n\t\t\t\t\t\"before:absolute before:inset-0 before:-z-10 before:rounded-lg before:shadow-[inset_0_-1px_0_0_theme(colors.black/25%)] before:disabled:shadow-none\",\n\t\t\t\t\t\"after:absolute after:inset-0 after:-z-10 after:rounded-lg after:shadow-[inset_0_2px_0_0_theme(colors.white/20%)] after:disabled:shadow-none\",\n\t\t\t\t],\n\t\t\t\tflat: \"text-[--button-text] bg-[--button-bg] shadow-sm disabled:shadow-none\",\n\t\t\t\toutline: [\n\t\t\t\t\t\"ring-inset ring-1 ring-border [--button-bg:theme(colors.transparent)] bg-[--button-bg]\",\n\t\t\t\t\t\"hover:[--button-bg:theme(colors.zinc.50)] active:[--button-bg:theme(colors.zinc.100)]\",\n\t\t\t\t\t\"dark:hover:[--button-bg:theme(colors.zinc.900/80%)] dark:active:[--button-bg:theme(colors.zinc.900)] dark:disabled:[--button-bg:theme(colors.transparent)]\",\n\t\t\t\t\t\"disabled:[--button-bg:theme(colors.transparent)] disabled:text-zinc-500\",\n\t\t\t\t],\n\t\t\t\tplain: [\n\t\t\t\t\t\"[--button-bg:theme(colors.transparent)] bg-[--button-bg]\",\n\t\t\t\t\t\"hover:[--button-bg:theme(colors.zinc.100)] active:[--button-bg:theme(colors.zinc.200)]\",\n\t\t\t\t\t\"dark:hover:[--button-bg:theme(colors.zinc.900/80%)] dark:active:[--button-bg:theme(colors.zinc.900)] dark:disabled:[--button-bg:theme(colors.transparent)]\",\n\t\t\t\t\t\"disabled:[--button-bg:theme(colors.transparent)] disabled:text-zinc-500\",\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tappearance: \"bezel\",\n\t\t},\n\t},\n);\n\nexport type buttonProps<T extends ValidComponent = \"button\"> =\n\tButtonRootProps<T> &\n\t\tVariantProps<typeof buttonVariants> & {\n\t\t\tclass?: string;\n\t\t};\n\nexport const Button = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, buttonProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as buttonProps, [\n\t\t\"class\",\n\t\t\"variant\",\n\t\t\"appearance\",\n\t]);\n\n\treturn (\n\t\t<ButtonPrimitive\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tappearance: local.appearance,\n\t\t\t\t\tvariant: local.variant,\n\t\t\t\t}),\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
    }
  ],
  "type": "components:ui"
}