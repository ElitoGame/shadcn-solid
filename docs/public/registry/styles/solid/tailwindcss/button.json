{
  "name": "button",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { ButtonRootProps } from \"@kobalte/core/button\";\r\nimport { Button as ButtonPrimitive } from \"@kobalte/core/button\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ValidComponent } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const buttonVariants = cva(\r\n\t\"relative isolate inline-flex justify-center items-center font-medium text-sm rounded-lg py-2 px-6 outline-none appearance-none transition-[background-color,box-shadow,color,outline-color] duration-300 disabled:cursor-not-allowed focus-visible:outline focus-visible:outline-[--btn-outline]\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tdefault: [\r\n\t\t\t\t\t\"[--btn-text:theme(colors.blue.50)] [--btn-bg:theme(colors.blue.500)] hover:[--btn-bg:theme(colors.blue.600)] active:[--btn-bg:theme(colors.blue.700)] [--btn-outline:theme(colors.blue.500)]\",\r\n\t\t\t\t\t\"disabled:[--btn-bg:theme(colors.blue.100)] disabled:[--btn-text:theme(colors.blue.400)]\",\r\n\t\t\t\t\t\"dark:disabled:[--btn-bg:theme(colors.blue.950)] dark:disabled:[--btn-text:theme(colors.blue.700)]\",\r\n\t\t\t\t],\r\n\t\t\t\tdestructive: [\r\n\t\t\t\t\t\"[--btn-text:theme(colors.red.50)] [--btn-bg:theme(colors.red.500)] hover:[--btn-bg:theme(colors.red.600)] active:[--btn-bg:theme(colors.red.700)] [--btn-outline:theme(colors.red.500)]\",\r\n\t\t\t\t\t\"disabled:[--btn-bg:theme(colors.red.100)] disabled:[--btn-text:theme(colors.red.400)]\",\r\n\t\t\t\t\t\"dark:disabled:[--btn-bg:theme(colors.red.950)] dark:disabled:[--btn-text:theme(colors.red.700)]\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tappearance: {\r\n\t\t\t\tbezel: [\r\n\t\t\t\t\t\"border-none text-[--btn-text] bg-[--btn-bg] shadow-sm disabled:shadow-none\",\r\n\t\t\t\t\t\"before:absolute before:inset-0 before:-z-10 before:rounded-lg before:shadow-[inset_0_-1px_0_0_theme(colors.black/25%)] before:disabled:shadow-none\",\r\n\t\t\t\t\t\"after:absolute after:inset-0 after:-z-10 after:rounded-lg after:shadow-[inset_0_2px_0_0_theme(colors.white/20%)] after:disabled:shadow-none\",\r\n\t\t\t\t],\r\n\t\t\t\tflat: \"text-[--btn-text] bg-[--btn-bg] shadow-sm disabled:shadow-none\",\r\n\t\t\t\toutline: [\r\n\t\t\t\t\t\"ring-inset ring-1 ring-border [--btn-bg:theme(colors.transparent)] bg-[--btn-bg]\",\r\n\t\t\t\t\t\"hover:[--btn-bg:theme(colors.zinc.50)] active:[--btn-bg:theme(colors.zinc.100)]\",\r\n\t\t\t\t\t\"dark:hover:[--btn-bg:theme(colors.zinc.900/80%)] dark:active:[--btn-bg:theme(colors.zinc.900)] dark:disabled:[--btn-bg:theme(colors.transparent)]\",\r\n\t\t\t\t\t\"disabled:[--btn-bg:theme(colors.transparent)] disabled:text-zinc-500\",\r\n\t\t\t\t],\r\n\t\t\t\tplain: [\r\n\t\t\t\t\t\"[--btn-bg:theme(colors.transparent)] bg-[--btn-bg]\",\r\n\t\t\t\t\t\"hover:[--btn-bg:theme(colors.zinc.100)] active:[--btn-bg:theme(colors.zinc.200)]\",\r\n\t\t\t\t\t\"dark:hover:[--btn-bg:theme(colors.zinc.900/80%)] dark:active:[--btn-bg:theme(colors.zinc.900)] dark:disabled:[--btn-bg:theme(colors.transparent)]\",\r\n\t\t\t\t\t\"disabled:[--btn-bg:theme(colors.transparent)] disabled:text-zinc-500\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"default\",\r\n\t\t\tappearance: \"bezel\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\nexport type buttonProps<T extends ValidComponent = \"button\"> =\r\n\tButtonRootProps<T> &\r\n\t\tVariantProps<typeof buttonVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t};\r\n\r\nexport const Button = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, buttonProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as buttonProps, [\r\n\t\t\"class\",\r\n\t\t\"variant\",\r\n\t\t\"appearance\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<ButtonPrimitive\r\n\t\t\tclass={cn(\r\n\t\t\t\tbuttonVariants({\r\n\t\t\t\t\tappearance: local.appearance,\r\n\t\t\t\t\tvariant: local.variant,\r\n\t\t\t\t}),\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}