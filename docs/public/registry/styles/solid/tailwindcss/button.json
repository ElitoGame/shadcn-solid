{
  "name": "button",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { ButtonRootProps } from \"@kobalte/core/button\";\nimport { Button as ButtonPrimitive } from \"@kobalte/core/button\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const buttonVariants = cva(\n\t\"relative isolate inline-flex justify-center items-center font-medium text-sm rounded-lg py-2 px-6 outline-none appearance-none border-none transition-[background-color,box-shadow,color,outline-color] duration-300 disabled:cursor-not-allowed\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: [\n\t\t\t\t\t\"text-white bg-blue-500 hover:bg-blue-600 active:bg-blue-700 focus-visible:outline-blue-500\",\n\t\t\t\t\t\"disabled:bg-blue-100 disabled:text-blue-400\",\n\t\t\t\t\t\"dark:disabled:bg-blue-950 dark:disabled:text-blue-700\",\n\t\t\t\t],\n\t\t\t\tdestructive: [\n\t\t\t\t\t\"text-white bg-red-500 hover:bg-red-600 active:bg-red-700 focus-visible:outline-red-500\",\n\t\t\t\t\t\"disabled:bg-red-100 disabled:text-red-400\",\n\t\t\t\t\t\"dark:disabled:bg-red-950 dark:disabled:text-red-700\",\n\t\t\t\t],\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tbezel: [\n\t\t\t\t\t\"shadow-sm disabled:shadow-none\",\n\t\t\t\t\t\"before:content-[''] before:absolute before:inset-0 before:-z-10 before:rounded-lg before:disabled:shadow-none before:shadow-[inset_0_-1px_0_0] before:shadow-black/20\",\n\t\t\t\t\t\"after:content-[''] after:absolute after:inset-0 after:-z-10 after:rounded-lg after:disabled:shadow-none after:shadow-[inset_0_2px_0_0] after:shadow-white/25\",\n\t\t\t\t],\n\t\t\t\tflat: \"shadow-sm disabled:shadow-none\",\n\t\t\t\toutline: [\n\t\t\t\t\t\"text-zinc-950 ring-inset ring-1 ring-zinc-200 bg-transparent\",\n\t\t\t\t\t\"hover:bg-zinc-50 active:bg-zinc-100\",\n\t\t\t\t\t\"dark:ring-zinc-800 dark:text-white dark:hover:bg-zinc-900/80 dark:active:bg-zinc-900\",\n\t\t\t\t\t\"disabled:bg-transparent disabled:text-zinc-500 disabled:dark:bg-transparent disabled:dark:text-zinc-500\",\n\t\t\t\t],\n\t\t\t\tplain: [\n\t\t\t\t\t\"text-zinc-950 bg-transparent\",\n\t\t\t\t\t\"hover:bg-zinc-50 active:bg-zinc-100\",\n\t\t\t\t\t\"dark:ring-zinc-800 dark:text-white dark:hover:bg-zinc-900/80 dark:active:bg-zinc-900\",\n\t\t\t\t\t\"disabled:bg-transparent disabled:text-zinc-500 disabled:dark:bg-transparent disabled:dark:text-zinc-500\",\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tappearance: \"bezel\",\n\t\t},\n\t},\n);\n\nexport type buttonProps<T extends ValidComponent = \"button\"> =\n\tButtonRootProps<T> &\n\t\tVariantProps<typeof buttonVariants> & {\n\t\t\tclass?: string;\n\t\t};\n\nexport const Button = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, buttonProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as buttonProps, [\n\t\t\"class\",\n\t\t\"variant\",\n\t\t\"appearance\",\n\t]);\n\n\treturn (\n\t\t<ButtonPrimitive\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tappearance: local.appearance,\n\t\t\t\t\tvariant: local.variant,\n\t\t\t\t}),\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n"
    }
  ],
  "type": "components:ui"
}