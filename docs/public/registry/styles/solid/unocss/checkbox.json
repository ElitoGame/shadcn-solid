{
  "name": "checkbox",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "checkbox.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tCheckboxControlProps,\n\tCheckboxDescriptionProps,\n\tCheckboxErrorMessageProps,\n\tCheckboxLabelProps,\n\tCheckboxRootProps,\n} from \"@kobalte/core/checkbox\";\nimport { Checkbox as CheckboxPrimitive } from \"@kobalte/core/checkbox\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport { cva } from \"class-variance-authority\";\nimport type { JSXElement, ValidComponent, VoidProps } from \"solid-js\";\nimport { Match, Switch, splitProps } from \"solid-js\";\n\nexport type checkboxProps<T extends ValidComponent = \"div\"> =\n\tCheckboxRootProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const Checkbox = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, checkboxProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as checkboxProps, [\"class\"]);\n\n\treturn (\n\t\t<CheckboxPrimitive class={cn(\"flex gap-x-2\", local.class)} {...rest} />\n\t);\n};\n\nexport type checkboxLabelProps<T extends ValidComponent = \"label\"> =\n\tCheckboxLabelProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const CheckboxLabel = <T extends ValidComponent = \"label\">(\n\tprops: PolymorphicProps<T, checkboxLabelProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as checkboxLabelProps, [\"class\"]);\n\n\treturn (\n\t\t<CheckboxPrimitive.Label\n\t\t\tclass={cn(\n\t\t\t\t\"text-sm font-medium select-none cursor-pointer data-[disabled]:cursor-not-allowed\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport type checkboxDescriptionProps<T extends ValidComponent = \"div\"> =\n\tCheckboxDescriptionProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const CheckboxDescription = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, checkboxDescriptionProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as checkboxDescriptionProps, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<CheckboxPrimitive.Description\n\t\t\tclass={cn(\"text-sm/6 text-muted-foreground select-none\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport type checkboxErrorMessageProps<T extends ValidComponent = \"div\"> =\n\tCheckboxErrorMessageProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const CheckboxErrorMessage = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, checkboxErrorMessageProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as checkboxErrorMessageProps, [\n\t\t\"class\",\n\t]);\n\n\treturn (\n\t\t<CheckboxPrimitive.ErrorMessage\n\t\t\tclass={cn(\"text-xs/6 text-red-500 font-medium\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport type checkboxControlProps<T extends ValidComponent = \"div\"> = VoidProps<\n\tCheckboxControlProps<T> & {\n\t\tclass?: string;\n\t\ticon?: JSXElement;\n\t\tindeterminate?: boolean;\n\t}\n>;\n\nexport const checkboxContentVariant = cva(\n\t\"size-4 shrink-0 rounded-sm transition-[box-shadow,border-color,background-color,color,opacity] duration-300 border cursor-pointer data-[disabled]:(op-50 text-transparent cursor-not-allowed)\",\n\t{\n\t\tvariants: {\n\t\t\tvalid: {\n\t\t\t\ttrue: [\n\t\t\t\t\t// main\n\t\t\t\t\t\"bg-zinc-100 border-zinc-200 text-white\",\n\t\t\t\t\t// main - dark\n\t\t\t\t\t\"dark:(bg-zinc-900 border-zinc-800)\",\n\t\t\t\t\t// hover\n\t\t\t\t\t\"is-[:not([data-disabled])]:(hover:(bg-zinc-200 border-zinc-300) peer-hover:(bg-zinc-200 border-zinc-300))\",\n\t\t\t\t\t// hover - dark\n\t\t\t\t\t\"dark:is-[:not([data-disabled])]:(hover:(bg-zinc-800 border-zinc-700) peer-hover:(bg-zinc-800 border-zinc-700))\",\n\t\t\t\t\t// checked\n\t\t\t\t\t\"[&:is([data-checked],[data-indeterminate]):not([data-invalid],[data-disabled])]:(bg-royal_blue-500 border-royal_blue-500 hover:(bg-royal_blue-600 border-royal_blue-600) peer-hover:(bg-royal_blue-600 border-royal_blue-600))\",\n\t\t\t\t\t// checked - dark\n\t\t\t\t\t\"dark:[&:is([data-checked],[data-indeterminate]):not([data-invalid],[data-disabled])]:(bg-royal_blue-500 border-royal_blue-500 hover:(bg-royal_blue-600 border-royal_blue-600) peer-hover:(bg-royal_blue-600 border-royal_blue-600))\",\n\t\t\t\t],\n\t\t\t},\n\t\t\tinvalid: {\n\t\t\t\ttrue: [\n\t\t\t\t\t// main\n\t\t\t\t\t\"data-[invalid]:(bg-red-100 border-red-200)\",\n\t\t\t\t\t// main - dark\n\t\t\t\t\t\"dark:data-[invalid]:(bg-red-950 border-red-800)\",\n\t\t\t\t\t// hover\n\t\t\t\t\t\"[&:is(:not([data-disabled]))]:data-[invalid]:(hover:(bg-red-200 border-red-300) peer-hover:(bg-red-200 border-red-300))\",\n\t\t\t\t\t// hover - dark\n\t\t\t\t\t\"dark:[&:is(:not([data-disabled]))]:data-[invalid]:(hover:(bg-red-950 border-red-700) peer-hover:(bg-red-950 border-red-700))\",\n\t\t\t\t\t// checked\n\t\t\t\t\t\"[&:is([data-invalid][data-checked],[data-invalid][data-indeterminate]):not([data-disabled])]:(bg-red-500 border-red-500 hover:(bg-red-600 border-red-600) peer-hover:(bg-red-600 border-red-600))\",\n\t\t\t\t\t// checked - dark\n\t\t\t\t\t\"dark:[&:is([data-invalid][data-checked],[data-invalid][data-indeterminate]):not([data-disabled])]:(bg-red-500 border-red-500 hover:(bg-red-600 border-red-600) peer-hover:(bg-red-600 border-red-600))\",\n\t\t\t\t],\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\ttrue: [\n\t\t\t\t\t// main\n\t\t\t\t\t\"peer-focus-visible:(outline-none ring-4 ring-royal_blue-50 border-royal_blue-500)\",\n\t\t\t\t\t// dark\n\t\t\t\t\t\"dark:peer-focus-visible:ring-royal_blue-500/40\",\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tinvalid: true,\n\t\t\t\tfocus: true,\n\t\t\t\tclass: [\n\t\t\t\t\t// main\n\t\t\t\t\t\"data-[invalid]:peer-focus-visible:(ring-red-200 border-red-500)\",\n\t\t\t\t\t// dark\n\t\t\t\t\t\"dark:data-[invalid]:peer-focus-visible:ring-red-500/40\",\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tfocus: true,\n\t\t\tinvalid: true,\n\t\t\tvalid: true,\n\t\t},\n\t},\n);\n\nexport const CheckboxControl = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, checkboxControlProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as checkboxControlProps, [\n\t\t\"class\",\n\t\t\"icon\",\n\t\t\"indeterminate\",\n\t]);\n\n\treturn (\n\t\t<div class=\"flex items-start mt-.6\">\n\t\t\t<CheckboxPrimitive.Input class=\"peer\" />\n\t\t\t<CheckboxPrimitive.Control\n\t\t\t\tclass={cn(checkboxContentVariant(), local.class)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t<CheckboxPrimitive.Indicator\n\t\t\t\t\tclass=\"flex items-center justify-center size-full [&>svg]:(animate-in zoom-in fade-in-0 animate-duration-300)\"\n\t\t\t\t\tforceMount={local.indeterminate}\n\t\t\t\t>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Match when={!local.icon && !local.indeterminate}>\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\t\td=\"m5 12l5 5L20 7\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<title>Checked</title>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t\t<Match when={local.icon && !local.indeterminate}>\n\t\t\t\t\t\t\t{local.icon}\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t\t<Match when={local.indeterminate}>\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\t\t\t\td=\"M5 12h14\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<title>Indeterminate</title>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</Match>\n\t\t\t\t\t</Switch>\n\t\t\t\t</CheckboxPrimitive.Indicator>\n\t\t\t</CheckboxPrimitive.Control>\n\t\t</div>\n\t);\n};\n"
    }
  ],
  "type": "components:ui"
}