{
  "name": "button",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { ButtonRootProps } from \"@kobalte/core/button\";\r\nimport { Button as ButtonPrimitive } from \"@kobalte/core/button\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ValidComponent } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const buttonVariants = cva(\r\n\t\"relative isolate inline-flex justify-center items-center font-medium text-sm rounded-lg py-2 px-6 outline-none appearance-none border-none transition-[background-color,box-shadow,color,outline-color] duration-300 disabled:cursor-not-allowed\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tdefault: [\r\n\t\t\t\t\t\"text-white bg-blue-500 hover:bg-blue-600 active:bg-blue-700 focus-visible:outline-blue-500\",\r\n\t\t\t\t\t\"disabled:(bg-blue-100 text-blue-400)\",\r\n\t\t\t\t\t\"dark:disabled:(bg-blue-950 text-blue-700)\",\r\n\t\t\t\t],\r\n\t\t\t\tdestructive: [\r\n\t\t\t\t\t\"text-white bg-red-500 hover:bg-red-600 active:bg-red-700 focus-visible:outline-red-500\",\r\n\t\t\t\t\t\"disabled:(bg-red-100 text-red-400)\",\r\n\t\t\t\t\t\"dark:disabled:(bg-red-950 text-red-700)\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tappearance: {\r\n\t\t\t\tbezel: [\r\n\t\t\t\t\t\"shadow-sm disabled:shadow-none\",\r\n\t\t\t\t\t\"[&:before,&:after]:(content-empty absolute inset-0 -z-10 rounded-lg disabled:shadow-none)\",\r\n\t\t\t\t\t\"before:(shadow-[inset_0_-1px_0_0] shadow-black/20)\",\r\n\t\t\t\t\t\"after:(shadow-[inset_0_2px_0_0] shadow-white/25)\",\r\n\t\t\t\t],\r\n\t\t\t\tflat: \"shadow-sm disabled:shadow-none\",\r\n\t\t\t\toutline: [\r\n\t\t\t\t\t\"text-zinc-950 ring-inset ring-1 ring-zinc-200 bg-transparent\",\r\n\t\t\t\t\t\"hover:bg-zinc-50 active:bg-zinc-100\",\r\n\t\t\t\t\t\"dark:(ring-zinc-800 text-white hover:bg-zinc-900/80 active:bg-zinc-900)\",\r\n\t\t\t\t\t\"disabled:(bg-transparent text-zinc-500 dark:(bg-transparent text-zinc-500))\",\r\n\t\t\t\t],\r\n\t\t\t\tplain: [\r\n\t\t\t\t\t\"text-zinc-950 bg-transparent\",\r\n\t\t\t\t\t\"hover:bg-zinc-50 active:bg-zinc-100\",\r\n\t\t\t\t\t\"dark:(ring-zinc-800 text-white hover:bg-zinc-900/80 active:bg-zinc-900)\",\r\n\t\t\t\t\t\"disabled:(bg-transparent text-zinc-500 dark:(bg-transparent text-zinc-500))\",\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"default\",\r\n\t\t\tappearance: \"bezel\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\nexport type buttonProps<T extends ValidComponent = \"button\"> =\r\n\tButtonRootProps<T> &\r\n\t\tVariantProps<typeof buttonVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t};\r\n\r\nexport const Button = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, buttonProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as buttonProps, [\r\n\t\t\"class\",\r\n\t\t\"variant\",\r\n\t\t\"appearance\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<ButtonPrimitive\r\n\t\t\tclass={cn(\r\n\t\t\t\tbuttonVariants({\r\n\t\t\t\t\tappearance: local.appearance,\r\n\t\t\t\t\tvariant: local.variant,\r\n\t\t\t\t}),\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}