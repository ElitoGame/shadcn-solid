{
  "name": "accordion",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n\tAccordionContentProps,\n\tAccordionItemProps,\n\tAccordionTriggerProps,\n} from \"@kobalte/core/accordion\";\nimport { Accordion as AccordionPrimitive } from \"@kobalte/core/accordion\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport { type ParentProps, type ValidComponent, splitProps } from \"solid-js\";\n\nexport const Accordion = AccordionPrimitive;\n\nexport type accordionItemProps<T extends ValidComponent = \"div\"> =\n\tAccordionItemProps<T> & {\n\t\tclass?: string;\n\t};\n\nexport const AccordionItem = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, accordionItemProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionItemProps, [\"class\"]);\n\n\treturn (\n\t\t<AccordionPrimitive.Item\n\t\t\tclass={cn(\"border-b border-border\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport type accordionTriggerProps<T extends ValidComponent = \"button\"> =\n\tParentProps<\n\t\tAccordionTriggerProps<T> & {\n\t\t\tclass?: string;\n\t\t}\n\t>;\n\nexport const AccordionTrigger = <T extends ValidComponent = \"button\">(\n\tprops: PolymorphicProps<T, accordionTriggerProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionTriggerProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<AccordionPrimitive.Header class=\"flex\">\n\t\t\t<AccordionPrimitive.Trigger\n\t\t\t\tclass={cn(\n\t\t\t\t\t\"flex flex-1 items-center justify-between py-3 text-sm font-medium border-none outline-none appearance-none transition-[outline-color,color] duration-300 bg-inherit\",\n\t\t\t\t\t\"text-muted-foreground data-[expanded]:text-foreground\",\n\t\t\t\t\t\"[--accordion-trigger-outline:theme(colors.blue.500)] focus-visible:(text-foreground outline outline-[--accordion-trigger-outline])\",\n\t\t\t\t\t\"[&>svg]:(size-4 transition-[transform,color] duration-300 text-muted-foreground focus-visible:text-foreground hover:text-foreground disabled:op60) [&[data-expanded]>svg]:(text-foreground rotate-180)\",\n\t\t\t\t\t\"[&:not(:disabled):hover]:text-foreground\",\n\t\t\t\t\t\"disabled:op60 disabled:cursor-not-allowed\",\n\t\t\t\t\tlocal.class,\n\t\t\t\t)}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{local.children}\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\t\td=\"m6 9l6 6l6-6\"\n\t\t\t\t\t/>\n\t\t\t\t\t<title>Arrow</title>\n\t\t\t\t</svg>\n\t\t\t</AccordionPrimitive.Trigger>\n\t\t</AccordionPrimitive.Header>\n\t);\n};\n\nexport type accordionContentProps<T extends ValidComponent = \"div\"> =\n\tParentProps<\n\t\tAccordionContentProps<T> & {\n\t\t\tclass?: string;\n\t\t}\n\t>;\n\nexport const AccordionContent = <T extends ValidComponent = \"div\">(\n\tprops: PolymorphicProps<T, accordionContentProps<T>>,\n) => {\n\tconst [local, rest] = splitProps(props as accordionContentProps, [\n\t\t\"class\",\n\t\t\"children\",\n\t]);\n\n\treturn (\n\t\t<AccordionPrimitive.Content\n\t\t\tclass={cn(\n\t\t\t\t\"animate-accordion-up overflow-hidden text-sm data-[expanded]:animate-accordion-down\",\n\t\t\t\tlocal.class,\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<div class=\"pb-3 pt-0\">{local.children}</div>\n\t\t</AccordionPrimitive.Content>\n\t);\n};\n"
    }
  ],
  "type": "components:ui"
}