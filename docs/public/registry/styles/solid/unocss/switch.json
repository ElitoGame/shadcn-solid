{
  "name": "switch",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "switch.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tSwitchControlProps,\r\n\tSwitchThumbProps,\r\n} from \"@kobalte/core/switch\";\r\nimport { Switch as SwitchPrimitive } from \"@kobalte/core/switch\";\r\nimport type { ParentProps, ValidComponent, VoidProps } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const SwitchLabel = SwitchPrimitive.Label;\r\nexport const Switch = SwitchPrimitive;\r\nexport const SwitchErrorMessage = SwitchPrimitive.ErrorMessage;\r\nexport const SwitchDescription = SwitchPrimitive.Description;\r\n\r\ntype switchControlProps<T extends ValidComponent = \"input\"> = ParentProps<\r\n\tSwitchControlProps<T> & { class?: string }\r\n>;\r\n\r\nexport const SwitchControl = <T extends ValidComponent = \"input\">(\r\n\tprops: PolymorphicProps<T, switchControlProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as switchControlProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SwitchPrimitive.Input class=\"[&:focus-visible+div]:(outline-none ring-1.5 ring-ring ring-offset-2 ring-offset-background)\" />\r\n\t\t\t<SwitchPrimitive.Control\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent bg-input shadow-sm transition-shadow data-[disabled]:(cursor-not-allowed opacity-50) data-[checked]:bg-primary transition-property-[box-shadow,color,background-color]\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t</SwitchPrimitive.Control>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\ntype switchThumbProps<T extends ValidComponent = \"div\"> = VoidProps<\r\n\tSwitchThumbProps<T> & { class?: string }\r\n>;\r\n\r\nexport const SwitchThumb = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, switchThumbProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as switchThumbProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<SwitchPrimitive.Thumb\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"pointer-events-none block h-4 w-4 translate-x-0 rounded-full bg-background shadow-lg transition-transform data-[checked]:translate-x-4\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}