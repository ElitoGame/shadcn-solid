{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type {\r\n\tDialogContentProps,\r\n\tDialogDescriptionProps,\r\n\tDialogTitleProps,\r\n} from \"@kobalte/core/dialog\";\r\nimport { Dialog as DialogPrimitive } from \"@kobalte/core/dialog\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { mergeProps, splitProps } from \"solid-js\";\r\n\r\nexport const Sheet = DialogPrimitive;\r\nexport const SheetTrigger = DialogPrimitive.Trigger;\r\n\r\nexport const sheetVariants = cva(\r\n\t\"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out duration-200 data-[expanded]:(animate-in duration-200) data-[closed]:(animate-out duration-200)\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tside: {\r\n\t\t\t\ttop: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\r\n\t\t\t\tbottom:\r\n\t\t\t\t\t\"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\r\n\t\t\t\tleft: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\r\n\t\t\t\tright:\r\n\t\t\t\t\t\"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tside: \"right\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\ntype sheetContentProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tDialogContentProps<T> &\r\n\t\tVariantProps<typeof sheetVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t}\r\n>;\r\n\r\nexport const SheetContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, sheetContentProps<T>>,\r\n) => {\r\n\tconst merge = mergeProps<sheetContentProps<T>[]>({ side: \"right\" }, props);\r\n\tconst [local, rest] = splitProps(merge as sheetContentProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t\t\"side\",\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<DialogPrimitive.Portal>\r\n\t\t\t<DialogPrimitive.Overlay\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"fixed inset-0 z-50 bg-background/80 data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\",\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t/>\r\n\t\t\t<DialogPrimitive.Content\r\n\t\t\t\tclass={sheetVariants({ side: local.side, class: local.class })}\r\n\t\t\t\t{...rest}\r\n\t\t\t>\r\n\t\t\t\t{local.children}\r\n\t\t\t\t<DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\r\n\t\t\t\t\t<svg\r\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\tclass=\"h-4 w-4\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\t\td=\"M18 6L6 18M6 6l12 12\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<title>Close</title>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</DialogPrimitive.CloseButton>\r\n\t\t\t</DialogPrimitive.Content>\r\n\t\t</DialogPrimitive.Portal>\r\n\t);\r\n};\r\n\r\ntype sheetTitleProps<T extends ValidComponent = \"h2\"> = DialogTitleProps<T> & {\r\n\tclass?: string;\r\n};\r\n\r\nexport const SheetTitle = <T extends ValidComponent = \"h2\">(\r\n\tprops: PolymorphicProps<T, sheetTitleProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as sheetTitleProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<DialogPrimitive.Title\r\n\t\t\tclass={cn(\"text-lg font-semibold text-foreground\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\ntype sheetDescriptionProps<T extends ValidComponent = \"p\"> =\r\n\tDialogDescriptionProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const SheetDescription = <T extends ValidComponent = \"p\">(\r\n\tprops: PolymorphicProps<T, sheetDescriptionProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as sheetDescriptionProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<DialogPrimitive.Description\r\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const SheetHeader = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const SheetFooter = (props: ComponentProps<\"div\">) => {\r\n\tconst [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclass={cn(\r\n\t\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}