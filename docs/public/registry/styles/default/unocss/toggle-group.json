{
  "name": "toggle-group",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "toggle-group.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tToggleGroupItemProps,\r\n\tToggleGroupRootProps,\r\n} from \"@kobalte/core/toggle-group\";\r\nimport { ToggleGroup as ToggleGroupPrimitive } from \"@kobalte/core/toggle-group\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport type { Accessor, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { createContext, createMemo, splitProps, useContext } from \"solid-js\";\r\nimport { toggleVariants } from \"./toggle\";\r\n\r\nconst ToggleGroupContext =\r\n\tcreateContext<Accessor<VariantProps<typeof toggleVariants>>>();\r\n\r\nconst useToggleGroup = () => {\r\n\tconst context = useContext(ToggleGroupContext);\r\n\r\n\tif (!context) {\r\n\t\tthrow new Error(\r\n\t\t\t\"`useToggleGroup`: must be used within a `ToggleGroup` component\",\r\n\t\t);\r\n\t}\r\n\r\n\treturn context;\r\n};\r\n\r\ntype toggleGroupProps<T extends ValidComponent = \"div\"> = ParentProps<\r\n\tToggleGroupRootProps<T> &\r\n\t\tVariantProps<typeof toggleVariants> & {\r\n\t\t\tclass?: string;\r\n\t\t}\r\n>;\r\n\r\nexport const ToggleGroup = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, toggleGroupProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toggleGroupProps, [\r\n\t\t\"class\",\r\n\t\t\"children\",\r\n\t\t\"size\",\r\n\t\t\"variant\",\r\n\t]);\r\n\r\n\tconst value = createMemo<VariantProps<typeof toggleVariants>>(() => ({\r\n\t\tsize: local.size,\r\n\t\tvariant: local.variant,\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<ToggleGroupPrimitive\r\n\t\t\tclass={cn(\"flex items-center justify-center gap-1\", local.class)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<ToggleGroupContext.Provider value={value}>\r\n\t\t\t\t{local.children}\r\n\t\t\t</ToggleGroupContext.Provider>\r\n\t\t</ToggleGroupPrimitive>\r\n\t);\r\n};\r\n\r\ntype toggleGroupItemProps<T extends ValidComponent = \"button\"> =\r\n\tToggleGroupItemProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const ToggleGroupItem = <T extends ValidComponent = \"button\">(\r\n\tprops: PolymorphicProps<T, toggleGroupItemProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as toggleGroupItemProps, [\"class\"]);\r\n\tconst context = useToggleGroup();\r\n\r\n\treturn (\r\n\t\t<ToggleGroupPrimitive.Item\r\n\t\t\tclass={cn(\r\n\t\t\t\ttoggleVariants({\r\n\t\t\t\t\tvariant: context().variant,\r\n\t\t\t\t\tsize: context().size,\r\n\t\t\t\t}),\r\n\t\t\t\tlocal.class,\r\n\t\t\t)}\r\n\t\t\t{...rest}\r\n\t\t/>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}