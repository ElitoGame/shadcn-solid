{
  "name": "tooltip",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type {\r\n\tTooltipContentProps,\r\n\tTooltipRootProps,\r\n} from \"@kobalte/core/tooltip\";\r\nimport { Tooltip as TooltipPrimitive } from \"@kobalte/core/tooltip\";\r\nimport { type ValidComponent, mergeProps, splitProps } from \"solid-js\";\r\n\r\nexport const TooltipTrigger = TooltipPrimitive.Trigger;\r\n\r\nexport const Tooltip = (props: TooltipRootProps) => {\r\n\tconst merge = mergeProps<TooltipRootProps[]>({ gutter: 4 }, props);\r\n\r\n\treturn <TooltipPrimitive {...merge} />;\r\n};\r\n\r\ntype tooltipContentProps<T extends ValidComponent = \"div\"> =\r\n\tTooltipContentProps<T> & {\r\n\t\tclass?: string;\r\n\t};\r\n\r\nexport const TooltipContent = <T extends ValidComponent = \"div\">(\r\n\tprops: PolymorphicProps<T, tooltipContentProps<T>>,\r\n) => {\r\n\tconst [local, rest] = splitProps(props as tooltipContentProps, [\"class\"]);\r\n\r\n\treturn (\r\n\t\t<TooltipPrimitive.Portal>\r\n\t\t\t<TooltipPrimitive.Content\r\n\t\t\t\tclass={cn(\r\n\t\t\t\t\t\"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95\",\r\n\t\t\t\t\tlocal.class,\r\n\t\t\t\t)}\r\n\t\t\t\t{...rest}\r\n\t\t\t/>\r\n\t\t</TooltipPrimitive.Portal>\r\n\t);\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}