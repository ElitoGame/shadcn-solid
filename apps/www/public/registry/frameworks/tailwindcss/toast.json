{
  "name": "toast",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "toast.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type {\n  ToastDescriptionProps,\n  ToastListProps,\n  ToastRegionProps,\n  ToastRootProps,\n  ToastTitleProps\n} from \"@kobalte/core/toast\";\nimport { Toast as ToastPrimitive } from \"@kobalte/core/toast\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ComponentProps, ValidComponent, VoidComponent, VoidProps } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\nimport { Portal } from \"solid-js/web\";\n\nexport const toastVariants = cva(\n  \"group pointer-events-auto relative flex flex-col gap-3 w-full items-center justify-between overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-y-0 data-[swipe=end]:translate-y-[var(--kb-toast-swipe-end-y)] data-[swipe=move]:translate-y-[--kb-toast-swipe-move-y] data-[swipe=move]:transition-none data-[opened]:animate-in data-[closed]:animate-out data-[swipe=end]:animate-out data-[closed]:fade-out-80 data-[closed]:slide-out-to-top-full data-[closed]:sm:slide-out-to-bottom-full data-[opened]:slide-in-from-top-full data-[opened]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n);\n\ntype toastProps<T extends ValidComponent = \"li\"> = ToastRootProps<T> &\n  VariantProps<typeof toastVariants> & {\n    class?: string;\n  };\n\nexport const Toast = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, toastProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toastProps, [\"class\", \"variant\"]);\n\n  return (\n    <ToastPrimitive class={cn(toastVariants({ variant: local.variant }), local.class)} {...rest} />\n  );\n};\n\ntype toastTitleProps<T extends ValidComponent = \"div\"> = ToastTitleProps<T> & {\n  class?: string;\n};\n\nexport const ToastTitle = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, toastTitleProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toastTitleProps, [\"class\"]);\n\n  return (\n    <ToastPrimitive.Title\n      class={cn(\"text-sm font-semibold [&+div]:text-xs\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype toastDescriptionProps<T extends ValidComponent = \"div\"> = ToastDescriptionProps<T> & {\n  class?: string;\n};\n\nexport const ToastDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, toastDescriptionProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toastDescriptionProps, [\"class\"]);\n\n  return <ToastPrimitive.Description class={cn(\"text-sm opacity-90\", local.class)} {...rest} />;\n};\n\ntype toastRegionProps<T extends ValidComponent = \"div\"> = ToastRegionProps & {\n  class?: string;\n};\n\nexport const ToastRegion = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, toastRegionProps<T>>\n) => {\n  const merge = mergeProps<toastRegionProps[]>(\n    {\n      swipeDirection: \"down\"\n    },\n    props\n  );\n\n  return (\n    <Portal>\n      <ToastPrimitive.Region {...merge} />\n    </Portal>\n  );\n};\n\ntype toastListProps<T extends ValidComponent = \"ol\"> = VoidProps<\n  ToastListProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const ToastList = <T extends ValidComponent = \"ol\">(\n  props: PolymorphicProps<T, toastListProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toastListProps, [\"class\"]);\n\n  return (\n    <ToastPrimitive.List\n      class={cn(\n        \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const ToastContent = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\", \"children\"]);\n\n  return (\n    <div class={cn(\"flex w-full flex-col\", local.class)} {...rest}>\n      <div>{local.children}</div>\n      <ToastPrimitive.CloseButton class=\"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18 6L6 18M6 6l12 12\"\n          />\n        </svg>\n      </ToastPrimitive.CloseButton>\n    </div>\n  );\n};\n\nexport const ToastProgress: VoidComponent = () => {\n  return (\n    <ToastPrimitive.ProgressTrack class=\"h-1 w-full overflow-hidden rounded-xl bg-primary/20 group-[.destructive]:bg-background/20\">\n      <ToastPrimitive.ProgressFill class=\"h-full w-[--kb-toast-progress-fill-width] bg-primary transition-all duration-150 ease-linear group-[.destructive]:bg-destructive-foreground\" />\n    </ToastPrimitive.ProgressTrack>\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}