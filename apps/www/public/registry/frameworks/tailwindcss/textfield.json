{
  "name": "textfield",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "textfield.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport * as TextFieldPrimitive from \"@kobalte/core/text-field\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ValidComponent, VoidProps } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\ntype TextFieldProps = TextFieldPrimitive.TextFieldRootProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const TextFieldRoot = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as TextFieldProps, [\"class\"]);\r\n\r\n  return <TextFieldPrimitive.Root class={cn(\"space-y-1\", local.class)} {...rest} />;\r\n};\r\n\r\nconst textfieldLabel = cva(\r\n  \"text-sm data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70 font-medium\",\r\n  {\r\n    variants: {\r\n      label: {\r\n        true: \"data-[invalid]:text-destructive\"\r\n      },\r\n      error: {\r\n        true: \"text-destructive\"\r\n      },\r\n      description: {\r\n        true: \"font-normal text-muted-foreground\"\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      label: true\r\n    }\r\n  }\r\n);\r\n\r\ntype TextFieldLabelProps = TextFieldPrimitive.TextFieldLabelProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const TextFieldLabel = <T extends ValidComponent = \"label\">(\r\n  props: PolymorphicProps<T, TextFieldLabelProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as TextFieldLabelProps, [\"class\"]);\r\n\r\n  return <TextFieldPrimitive.Label class={cn(textfieldLabel(), local.class)} {...rest} />;\r\n};\r\n\r\ntype TextFieldErrorMessageProps = TextFieldPrimitive.TextFieldErrorMessageProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldErrorMessageProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as TextFieldErrorMessageProps, [\"class\"]);\r\n\r\n  return (\r\n    <TextFieldPrimitive.ErrorMessage\r\n      class={cn(textfieldLabel({ error: true }), local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldDescriptionProps = TextFieldPrimitive.TextFieldDescriptionProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const TextFieldDescription = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, TextFieldDescriptionProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as TextFieldDescriptionProps, [\"class\"]);\r\n\r\n  return (\r\n    <TextFieldPrimitive.Description\r\n      class={cn(textfieldLabel({ description: true }), local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextFieldInputProps = VoidProps<\r\n  TextFieldPrimitive.TextFieldInputProps & {\r\n    class?: string;\r\n  }\r\n>;\r\n\r\nexport const TextField = <T extends ValidComponent = \"input\">(\r\n  props: PolymorphicProps<T, TextFieldInputProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as TextFieldInputProps, [\"class\"]);\r\n\r\n  return (\r\n    <TextFieldPrimitive.Input\r\n      class={cn(\r\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-shadow file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-[1.5px] focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}