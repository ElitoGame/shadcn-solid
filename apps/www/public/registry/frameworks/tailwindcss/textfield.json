{
  "name": "textfield",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "textfield.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type {\n  TextFieldDescriptionProps,\n  TextFieldErrorMessageProps,\n  TextFieldInputProps,\n  TextFieldLabelProps,\n  TextFieldRootProps\n} from \"@kobalte/core/text-field\";\nimport { TextField as TextFieldPrimitive } from \"@kobalte/core/text-field\";\nimport { cva } from \"class-variance-authority\";\nimport type { ValidComponent, VoidProps } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\ntype textFieldProps<T extends ValidComponent = \"div\"> = TextFieldRootProps<T> & {\n  class?: string;\n};\n\nexport const TextFieldRoot = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, textFieldProps<T>>\n) => {\n  const [local, rest] = splitProps(props as textFieldProps, [\"class\"]);\n\n  return <TextFieldPrimitive class={cn(\"space-y-1\", local.class)} {...rest} />;\n};\n\nexport const textfieldLabel = cva(\n  \"text-sm data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70 font-medium\",\n  {\n    variants: {\n      label: {\n        true: \"data-[invalid]:text-destructive\"\n      },\n      error: {\n        true: \"text-destructive text-xs\"\n      },\n      description: {\n        true: \"font-normal text-muted-foreground\"\n      }\n    },\n    defaultVariants: {\n      label: true\n    }\n  }\n);\n\ntype textFieldLabelProps<T extends ValidComponent = \"label\"> = TextFieldLabelProps<T> & {\n  class?: string;\n};\n\nexport const TextFieldLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, textFieldLabelProps<T>>\n) => {\n  const [local, rest] = splitProps(props as textFieldLabelProps, [\"class\"]);\n\n  return <TextFieldPrimitive.Label class={cn(textfieldLabel(), local.class)} {...rest} />;\n};\n\ntype textFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\n  TextFieldErrorMessageProps<T> & {\n    class?: string;\n  };\n\nexport const TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, textFieldErrorMessageProps<T>>\n) => {\n  const [local, rest] = splitProps(props as textFieldErrorMessageProps, [\"class\"]);\n\n  return (\n    <TextFieldPrimitive.ErrorMessage\n      class={cn(textfieldLabel({ error: true }), local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype textFieldDescriptionProps<T extends ValidComponent = \"div\"> = TextFieldDescriptionProps<T> & {\n  class?: string;\n};\n\nexport const TextFieldDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, textFieldDescriptionProps<T>>\n) => {\n  const [local, rest] = splitProps(props as textFieldDescriptionProps, [\"class\"]);\n\n  return (\n    <TextFieldPrimitive.Description\n      class={cn(textfieldLabel({ description: true, label: false }), local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype textFieldInputProps<T extends ValidComponent = \"input\"> = VoidProps<\n  TextFieldInputProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const TextField = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, textFieldInputProps<T>>\n) => {\n  const [local, rest] = splitProps(props as textFieldInputProps, [\"class\"]);\n\n  return (\n    <TextFieldPrimitive.Input\n      class={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-shadow file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-[1.5px] focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}
