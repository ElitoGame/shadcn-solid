{
  "name": "toggle-group",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "toggle-group.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ToggleGroupItemProps, ToggleGroupRootProps } from \"@kobalte/core/toggle-group\";\nimport { ToggleGroup as ToggleGroupPrimitive } from \"@kobalte/core/toggle-group\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport type { Accessor, ParentProps, ValidComponent } from \"solid-js\";\nimport { createContext, createMemo, splitProps, useContext } from \"solid-js\";\nimport { toggleVariants } from \"./toggle\";\n\nconst ToggleGroupContext = createContext<Accessor<VariantProps<typeof toggleVariants>>>();\n\nconst useToggleGroup = () => {\n  const context = useContext(ToggleGroupContext);\n\n  if (!context) {\n    throw new Error(\"`useToggleGroup`: must be used within a `ToggleGroup` component\");\n  }\n\n  return context;\n};\n\ntype toggleGroupProps<T extends ValidComponent = \"div\"> = ParentProps<\n  ToggleGroupRootProps<T> &\n    VariantProps<typeof toggleVariants> & {\n      class?: string;\n    }\n>;\n\nexport const ToggleGroup = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, toggleGroupProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toggleGroupProps, [\n    \"class\",\n    \"children\",\n    \"size\",\n    \"variant\"\n  ]);\n\n  const value = createMemo<VariantProps<typeof toggleVariants>>(() => ({\n    size: local.size,\n    variant: local.variant\n  }));\n\n  return (\n    <ToggleGroupPrimitive\n      class={cn(\"flex items-center justify-center gap-1\", local.class)}\n      {...rest}\n    >\n      <ToggleGroupContext.Provider value={value}>{local.children}</ToggleGroupContext.Provider>\n    </ToggleGroupPrimitive>\n  );\n};\n\ntype toggleGroupItemProps<T extends ValidComponent = \"button\"> = ToggleGroupItemProps<T> & {\n  class?: string;\n};\n\nexport const ToggleGroupItem = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, toggleGroupItemProps<T>>\n) => {\n  const [local, rest] = splitProps(props as toggleGroupItemProps, [\"class\"]);\n  const context = useToggleGroup();\n\n  return (\n    <ToggleGroupPrimitive.Item\n      class={cn(\n        toggleVariants({\n          variant: context().variant,\n          size: context().size\n        }),\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}
