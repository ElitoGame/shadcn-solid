{
  "name": "menubar",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "menubar.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n  MenubarCheckboxItemProps,\n  MenubarContentProps,\n  MenubarItemLabelProps,\n  MenubarItemProps,\n  MenubarMenuProps,\n  MenubarRadioItemProps,\n  MenubarRootProps,\n  MenubarSeparatorProps,\n  MenubarSubContentProps,\n  MenubarSubTriggerProps,\n  MenubarTriggerProps\n} from \"@kobalte/core/menubar\";\nimport { Menubar as MenubarPrimitive } from \"@kobalte/core/menubar\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\n\nexport const MenubarSub = MenubarPrimitive.Sub;\nexport const MenubarRadioGroup = MenubarPrimitive.RadioGroup;\n\ntype menubarProps<T extends ValidComponent = \"div\"> = MenubarRootProps<T> & { class?: string };\n\nexport const Menubar = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarProps, [\"class\"]);\n\n  return (\n    <MenubarPrimitive\n      class={cn(\n        \"flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const MenubarMenu = (props: MenubarMenuProps) => {\n  const merge = mergeProps<MenubarMenuProps[]>({ gutter: 8, shift: -4 }, props);\n\n  return <MenubarPrimitive.Menu {...merge} />;\n};\n\ntype menubarTriggerProps<T extends ValidComponent = \"button\"> = MenubarTriggerProps<T> & {\n  class?: string;\n};\n\nexport const MenubarTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, menubarTriggerProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarTriggerProps, [\"class\"]);\n\n  return (\n    <MenubarPrimitive.Trigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:(bg-accent text-accent-foreground) data-[expanded]:(bg-accent text-accent-foreground)\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype menubarSubTriggerProps<T extends ValidComponent = \"button\"> = ParentProps<\n  MenubarSubTriggerProps<T> & {\n    class?: string;\n    inset?: boolean;\n  }\n>;\n\nexport const MenubarSubTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, menubarSubTriggerProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarSubTriggerProps, [\"class\", \"children\", \"inset\"]);\n\n  return (\n    <MenubarPrimitive.SubTrigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[expanded]:(bg-accent text-accent-foreground)\",\n        local.inset && \"pl-8\",\n        local.class\n      )}\n      {...rest}\n    >\n      {local.children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        class=\"ml-auto h-4 w-4\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"m9 6l6 6l-6 6\"\n        />\n      </svg>\n    </MenubarPrimitive.SubTrigger>\n  );\n};\n\ntype menubarSubContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n  MenubarSubContentProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const MenubarSubContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarSubContentProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarSubContentProps, [\"class\", \"children\"]);\n\n  return (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.SubContent\n        class={cn(\n          \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95) outline-none origin-[--kb-menu-content-transform-origin]\",\n          local.class\n        )}\n        {...rest}\n      >\n        {local.children}\n      </MenubarPrimitive.SubContent>\n    </MenubarPrimitive.Portal>\n  );\n};\n\ntype menubarContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n  MenubarContentProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const MenubarContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarContentProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarContentProps, [\"class\", \"children\"]);\n\n  return (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        class={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95) outline-none origin-[--kb-menu-content-transform-origin]\",\n          local.class\n        )}\n        {...rest}\n      >\n        {local.children}\n      </MenubarPrimitive.Content>\n    </MenubarPrimitive.Portal>\n  );\n};\n\ntype menubarItemProps<T extends ValidComponent = \"div\"> = MenubarItemProps<T> & {\n  class?: string;\n  inset?: boolean;\n};\n\nexport const MenubarItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarItemProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarItemProps, [\"class\", \"inset\"]);\n\n  return (\n    <MenubarPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n        local.inset && \"pl-8\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype menubarItemLabelProps<T extends ValidComponent = \"div\"> = MenubarItemLabelProps<T> & {\n  class?: string;\n  inset?: boolean;\n};\n\nexport const MenubarItemLabel = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarItemLabelProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarItemLabelProps, [\"class\", \"inset\"]);\n\n  return (\n    <MenubarPrimitive.ItemLabel\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", local.inset && \"pl-8\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype menubarSeparatorProps<T extends ValidComponent = \"hr\"> = MenubarSeparatorProps<T> & {\n  class?: string;\n};\n\nexport const MenubarSeparator = <T extends ValidComponent = \"hr\">(\n  props: PolymorphicProps<T, menubarSeparatorProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarSeparatorProps, [\"class\"]);\n\n  return (\n    <MenubarPrimitive.Separator class={cn(\"-mx-1 my-1 h-px bg-muted\", local.class)} {...rest} />\n  );\n};\n\ntype menubarCheckboxItemProps<T extends ValidComponent = \"div\"> = ParentProps<\n  MenubarCheckboxItemProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const MenubarCheckboxItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarCheckboxItemProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarCheckboxItemProps, [\"class\", \"children\"]);\n\n  return (\n    <MenubarPrimitive.CheckboxItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n        local.class\n      )}\n      {...rest}\n    >\n      <MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\n          <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"m5 12l5 5L20 7\"\n          />\n        </svg>\n      </MenubarPrimitive.ItemIndicator>\n      {local.children}\n    </MenubarPrimitive.CheckboxItem>\n  );\n};\n\ntype menubarRadioItemProps<T extends ValidComponent = \"div\"> = ParentProps<\n  MenubarRadioItemProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const MenubarRadioItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, menubarRadioItemProps<T>>\n) => {\n  const [local, rest] = splitProps(props as menubarRadioItemProps, [\"class\", \"children\"]);\n\n  return (\n    <MenubarPrimitive.RadioItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\n        local.class\n      )}\n      {...rest}\n    >\n      <MenubarPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-2 w-2\">\n          <g fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n            <path d=\"M0 0h24v24H0z\" />\n            <path\n              fill=\"currentColor\"\n              d=\"M7 3.34a10 10 0 1 1-4.995 8.984L2 12l.005-.324A10 10 0 0 1 7 3.34\"\n            />\n          </g>\n        </svg>\n      </MenubarPrimitive.ItemIndicator>\n      {local.children}\n    </MenubarPrimitive.RadioItem>\n  );\n};\n\nexport const MenubarShortcut = (props: ComponentProps<\"span\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <span\n      class={cn(\"ml-auto text-xs tracking-widest text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}
