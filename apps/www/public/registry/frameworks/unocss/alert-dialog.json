{
  "name": "alert-dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "alert-dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n  AlertDialogCloseButtonProps,\n  AlertDialogContentProps,\n  AlertDialogDescriptionProps,\n  AlertDialogTitleProps\n} from \"@kobalte/core/alert-dialog\";\nimport { AlertDialog as AlertDialogPrimitive } from \"@kobalte/core/alert-dialog\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\nimport { buttonVariants } from \"./button\";\n\nexport const AlertDialog = AlertDialogPrimitive;\nexport const AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\ntype alertDialogContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n  AlertDialogContentProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const AlertDialogContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, alertDialogContentProps<T>>\n) => {\n  const [local, rest] = splitProps(props as alertDialogContentProps, [\"class\", \"children\"]);\n\n  return (\n    <AlertDialogPrimitive.Portal>\n      <AlertDialogPrimitive.Overlay class=\"fixed inset-0 z-50 bg-foreground/80 data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\" />\n      <AlertDialogPrimitive.Content\n        class={cn(\n          \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:(animate-in fade-in-0 zoom-in-95 slide-in-from-left-1/2 slide-in-from-top-48% duration-200) data-[closed]:(animate-out fade-out-0 zoom-out-95 slide-out-to-left-1/2 slide-out-to-top-48% duration-200) sm:rounded-lg md:w-full\",\n          local.class\n        )}\n        {...rest}\n      >\n        {local.children}\n      </AlertDialogPrimitive.Content>\n    </AlertDialogPrimitive.Portal>\n  );\n};\n\nexport const AlertDialogHeader = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\n  );\n};\n\nexport const AlertDialogFooter = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:(flex-row justify-end space-x-2)\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype alertDialogTitleProps<T extends ValidComponent = \"h2\"> = AlertDialogTitleProps<T> & {\n  class?: string;\n};\n\nexport const AlertDialogTitle = <T extends ValidComponent = \"h2\">(\n  props: PolymorphicProps<T, alertDialogTitleProps<T>>\n) => {\n  const [local, rest] = splitProps(props as alertDialogTitleProps, [\"class\"]);\n\n  return <AlertDialogPrimitive.Title class={cn(\"text-lg font-semibold\", local.class)} {...rest} />;\n};\n\ntype alertDialogDescriptionProps<T extends ValidComponent = \"p\"> =\n  AlertDialogDescriptionProps<T> & {\n    class?: string;\n  };\n\nexport const AlertDialogDescription = <T extends ValidComponent = \"p\">(\n  props: PolymorphicProps<T, alertDialogDescriptionProps<T>>\n) => {\n  const [local, rest] = splitProps(props as alertDialogDescriptionProps, [\"class\"]);\n\n  return (\n    <AlertDialogPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype alertDialogCloseProps<T extends ValidComponent = \"button\"> = AlertDialogCloseButtonProps<T> & {\n  class?: string;\n};\n\nexport const AlertDialogClose = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, alertDialogCloseProps<T>>\n) => {\n  const [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\n\n  return (\n    <AlertDialogPrimitive.CloseButton\n      class={cn(\n        buttonVariants({\n          variant: \"outline\"\n        }),\n        \"mt-2 md:mt-0\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const AlertDialogAction = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, alertDialogCloseProps<T>>\n) => {\n  const [local, rest] = splitProps(props as alertDialogCloseProps, [\"class\"]);\n\n  return <AlertDialogPrimitive.CloseButton class={cn(buttonVariants(), local.class)} {...rest} />;\n};\n"
    }
  ],
  "type": "components:ui"
}