{
  "name": "alert",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "alert.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport { Alert as AlertPrimitive } from \"@kobalte/core\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ComponentProps } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&:has(svg)]:pl-11 [&>svg+div]:translate-y-[-3px] [&>svg]:(absolute left-4 top-4 text-foreground)\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n);\n\nexport const Alert = (\n  props: AlertPrimitive.AlertRootProps & VariantProps<typeof alertVariants>\n) => {\n  const [local, rest] = splitProps(props, [\"class\", \"variant\"]);\n\n  return (\n    <AlertPrimitive.Root\n      class={cn(\n        alertVariants({\n          variant: props.variant\n        }),\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const AlertTitle = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return <div class={cn(\"font-medium leading-5 tracking-tight\", local.class)} {...rest} />;\n};\n\nexport const AlertDescription = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return <div class={cn(\"text-sm [&_p]:leading-relaxed\", local.class)} {...rest} />;\n};\n"
    }
  ],
  "type": "components:ui"
}