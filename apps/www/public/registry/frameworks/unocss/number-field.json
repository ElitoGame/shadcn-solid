{
  "name": "number-field",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "number-field.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n  NumberFieldDecrementTriggerProps,\n  NumberFieldDescriptionProps,\n  NumberFieldErrorMessageProps,\n  NumberFieldIncrementTriggerProps,\n  NumberFieldInputProps,\n  NumberFieldLabelProps,\n  NumberFieldRootProps\n} from \"@kobalte/core/number-field\";\nimport { NumberField as NumberFieldPrimitive } from \"@kobalte/core/number-field\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ValidComponent, VoidProps } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\nimport { textfieldLabel } from \"./textfield\";\n\nexport const NumberFieldHiddenInput = NumberFieldPrimitive.HiddenInput;\n\ntype numberFieldLabelProps<T extends ValidComponent = \"div\"> = NumberFieldLabelProps<T> & {\n  class?: string;\n};\n\nexport const NumberFieldLabel = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, numberFieldLabelProps<T>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldLabelProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.Label\n      class={cn(textfieldLabel({ label: true }), local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype numberFieldDescriptionProps<T extends ValidComponent = \"div\"> =\n  NumberFieldDescriptionProps<T> & {\n    class?: string;\n  };\n\nexport const NumberFieldDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, numberFieldDescriptionProps<T>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldDescriptionProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.Description\n      class={cn(textfieldLabel({ description: true, label: false }), local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype numberFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\n  NumberFieldErrorMessageProps<T> & {\n    class?: string;\n  };\n\nexport const NumberFieldErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, numberFieldErrorMessageProps<T>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldErrorMessageProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.ErrorMessage\n      class={cn(textfieldLabel({ error: true }), local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype numberFieldProps<T extends ValidComponent = \"div\"> = NumberFieldRootProps<T> & {\n  class?: string;\n};\n\nexport const NumberField = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, numberFieldProps<T>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldProps, [\"class\"]);\n\n  return <NumberFieldPrimitive class={cn(\"grid gap-1.5\", local.class)} {...rest} />;\n};\n\nexport const NumberFieldGroup = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div\n      class={cn(\n        \"relative focus-within:(outline-none ring-1.5 ring-ring) transition-shadow rounded-md\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype numberFieldInputProps<T extends ValidComponent = \"input\"> = NumberFieldInputProps<T> & {\n  class?: string;\n};\n\nexport const NumberFieldInput = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, VoidProps<numberFieldInputProps<T>>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldInputProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.Input\n      class={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-10 py-1 text-sm text-center shadow-sm placeholder:text-muted-foreground disabled:(cursor-not-allowed opacity-50) focus-visible:outline-none\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\ntype numberFieldDecrementTriggerProps<T extends ValidComponent = \"button\"> = VoidProps<\n  NumberFieldDecrementTriggerProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const NumberFieldDecrementTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, VoidProps<numberFieldDecrementTriggerProps<T>>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldDecrementTriggerProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.DecrementTrigger\n      class={cn(\n        \"absolute top-1/2 -translate-y-1/2 left-0 p-3 disabled:(cursor-not-allowed opacity-20)\",\n        local.class\n      )}\n      {...rest}\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M5 12h14\"\n        />\n      </svg>\n    </NumberFieldPrimitive.DecrementTrigger>\n  );\n};\n\ntype numberFieldIncrementTriggerProps<T extends ValidComponent = \"button\"> = VoidProps<\n  NumberFieldIncrementTriggerProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const NumberFieldIncrementTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, numberFieldIncrementTriggerProps<T>>\n) => {\n  const [local, rest] = splitProps(props as numberFieldIncrementTriggerProps, [\"class\"]);\n\n  return (\n    <NumberFieldPrimitive.IncrementTrigger\n      class={cn(\n        \"absolute top-1/2 -translate-y-1/2 right-0 disabled:(cursor-not-allowed opacity-20) p-3\",\n        local.class\n      )}\n      {...rest}\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M12 5v14m-7-7h14\"\n        />\n      </svg>\n    </NumberFieldPrimitive.IncrementTrigger>\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}
