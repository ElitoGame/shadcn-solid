{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport * as DialogPrimitive from \"@kobalte/core/dialog\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { mergeProps, splitProps } from \"solid-js\";\r\n\r\nexport const Sheet = DialogPrimitive.Root;\r\nexport const SheetTrigger = DialogPrimitive.Trigger;\r\n\r\ntype SheetOverlayProps = DialogPrimitive.DialogOverlayProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const SheetOverlay = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SheetOverlayProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as SheetOverlayProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      class={cn(\r\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out duration-200 data-[expanded]:animate-in data-[closed]:animate-out\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\"\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\"\r\n    }\r\n  }\r\n);\r\n\r\ntype SheetContentProps = ParentProps<\r\n  DialogPrimitive.DialogContentProps &\r\n    VariantProps<typeof sheetVariants> & {\r\n      class?: string;\r\n    }\r\n>;\r\n\r\nexport const SheetContent = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, SheetContentProps>\r\n) => {\r\n  const merge = mergeProps({ side: \"right\" }, props);\r\n  const [local, rest] = splitProps(merge, [\"class\", \"children\", \"side\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Portal>\r\n      <SheetOverlay />\r\n      <DialogPrimitive.Content\r\n        class={sheetVariants({ side: local.side, class: local.class })}\r\n        {...rest}\r\n      >\r\n        {local.children}\r\n        <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M18 6L6 18M6 6l12 12\"\r\n            />\r\n          </svg>\r\n          <span class=\"sr-only\">Close</span>\r\n        </DialogPrimitive.CloseButton>\r\n      </DialogPrimitive.Content>\r\n    </DialogPrimitive.Portal>\r\n  );\r\n};\r\n\r\ntype SheetTitleProps = DialogPrimitive.DialogTitleProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const SheetTitle = <T extends ValidComponent = \"h2\">(\r\n  props: PolymorphicProps<T, SheetTitleProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as SheetTitleProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Title\r\n      class={cn(\"text-lg font-semibold text-foreground\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype SheetDescriptionProps = DialogPrimitive.DialogTitleProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const SheetDescription = <T extends ValidComponent = \"p\">(\r\n  props: PolymorphicProps<T, SheetDescriptionProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as SheetDescriptionProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Description\r\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SheetHeader = (props: ComponentProps<\"div\">) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\r\n  );\r\n};\r\n\r\nexport const SheetFooter = (props: ComponentProps<\"div\">) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <div\r\n      class={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}