{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport { Dialog as DialogPrimitive } from \"@kobalte/core\";\nimport type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\nimport type { ComponentProps, ParentProps } from \"solid-js\";\nimport { mergeProps, splitProps } from \"solid-js\";\n\nexport const Sheet = DialogPrimitive.Root;\nexport const SheetTrigger = DialogPrimitive.Trigger;\n\nexport const SheetOverlay = (props: DialogPrimitive.DialogOverlayProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <DialogPrimitive.Overlay\n      class={cn(\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[expanded]:(animate-in duration-500) data-[closed]:(animate-out duration-300)\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\"\n      }\n    },\n    defaultVariants: {\n      side: \"right\"\n    }\n  }\n);\n\nexport const SheetContent = (\n  props: DialogPrimitive.DialogContentProps & VariantProps<typeof sheetVariants>\n) => {\n  const merge = mergeProps<\n    ParentProps<DialogPrimitive.DialogContentProps & VariantProps<typeof sheetVariants>>[]\n  >({ side: \"right\" }, props);\n  const [local, rest] = splitProps(merge, [\"class\", \"children\", \"side\"]);\n\n  return (\n    <DialogPrimitive.Portal>\n      <SheetOverlay />\n      <DialogPrimitive.Content\n        class={sheetVariants({ side: local.side, class: local.class })}\n        {...rest}\n      >\n        {local.children}\n        <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M18 6L6 18M6 6l12 12\"\n            />\n          </svg>\n          <span class=\"sr-only\">Close</span>\n        </DialogPrimitive.CloseButton>\n      </DialogPrimitive.Content>\n    </DialogPrimitive.Portal>\n  );\n};\n\nexport const SheetTitle = (props: DialogPrimitive.DialogTitleProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <DialogPrimitive.Title\n      class={cn(\"text-lg font-semibold text-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const SheetDescription = (props: DialogPrimitive.DialogDescriptionProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <DialogPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const SheetHeader = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\n  );\n};\n\nexport const SheetFooter = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", local.class)}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}