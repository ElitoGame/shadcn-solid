{
  "name": "dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport { Dialog as DialogPrimitive } from \"@kobalte/core\";\nimport type { ComponentProps } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const Dialog = DialogPrimitive.Root;\nexport const DialogTrigger = DialogPrimitive.Trigger;\n\nexport const DialogOverlay = (props: DialogPrimitive.DialogOverlayProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n  return (\n    <DialogPrimitive.Overlay\n      class={cn(\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\",\n        local.class\n      )}\n      {...rest}\n    />\n  );\n};\n\nexport const DialogContent = (props: DialogPrimitive.DialogContentProps) => {\n  const [local, rest] = splitProps(props, [\"class\", \"children\"]);\n\n  return (\n    <DialogPrimitive.Portal>\n      <DialogOverlay />\n      <div class=\"fixed inset-0 z-50 flex items-center justify-center\">\n        <DialogPrimitive.Content\n          class={cn(\n            \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:(animate-in fade-in-0 zoom-in-95 slide-in-from-left-1/2 slide-in-from-top-48%) data-[closed]:(animate-out fade-out-0 zoom-out-95 slide-out-to-left-1/2 slide-out-to-top-48%) md:w-full sm:rounded-lg\",\n            local.class\n          )}\n          {...rest}\n        >\n          {local.children}\n          <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\n              <path\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M18 6L6 18M6 6l12 12\"\n              />\n            </svg>\n            <span class=\"sr-only\">Close</span>\n          </DialogPrimitive.CloseButton>\n        </DialogPrimitive.Content>\n      </div>\n    </DialogPrimitive.Portal>\n  );\n};\n\nexport const DialogTitle = (props: DialogPrimitive.DialogTitleProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n  return (\n    <DialogPrimitive.Title\n      class={cn(\"text-lg font-semibold text-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const DialogDescription = (props: DialogPrimitive.DialogDescriptionProps) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n  return (\n    <DialogPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const DialogHeader = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\n  );\n};\n\nexport const DialogFooter = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:(flex-row justify-end space-x-2)\", local.class)}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}