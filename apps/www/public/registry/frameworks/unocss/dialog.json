{
  "name": "dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport * as DialogPrimitive from \"@kobalte/core/dialog\";\r\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\r\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const Dialog = DialogPrimitive.Root;\r\nexport const DialogTrigger = DialogPrimitive.Trigger;\r\n\r\ntype DialogOverlayProps = DialogPrimitive.DialogOverlayProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const DialogOverlay = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, DialogOverlayProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as DialogOverlayProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      class={cn(\r\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype DialogContentProps = ParentProps<\r\n  DialogPrimitive.DialogContentProps & {\r\n    class?: string;\r\n  }\r\n>;\r\n\r\nexport const DialogContent = <T extends ValidComponent = \"div\">(\r\n  props: PolymorphicProps<T, DialogContentProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as DialogContentProps, [\"class\", \"children\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Portal>\r\n      <DialogOverlay />\r\n      <div class=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n        <DialogPrimitive.Content\r\n          class={cn(\r\n            \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:(animate-in fade-in-0 zoom-in-95 slide-in-from-left-1/2 slide-in-from-top-48%) data-[closed]:(animate-out fade-out-0 zoom-out-95 slide-out-to-left-1/2 slide-out-to-top-48%) md:w-full sm:rounded-lg\",\r\n            local.class\r\n          )}\r\n          {...rest}\r\n        >\r\n          {local.children}\r\n          <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\r\n              <path\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M18 6L6 18M6 6l12 12\"\r\n              />\r\n            </svg>\r\n            <span class=\"sr-only\">Close</span>\r\n          </DialogPrimitive.CloseButton>\r\n        </DialogPrimitive.Content>\r\n      </div>\r\n    </DialogPrimitive.Portal>\r\n  );\r\n};\r\n\r\ntype DialogTitleProps = DialogPrimitive.DialogTitleProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const DialogTitle = <T extends ValidComponent = \"h2\">(\r\n  props: PolymorphicProps<T, DialogTitleProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as DialogTitleProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Title\r\n      class={cn(\"text-lg font-semibold text-foreground\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype DialogDescriptionProps = DialogPrimitive.DialogDescriptionProps & {\r\n  class?: string;\r\n};\r\n\r\nexport const DialogDescription = <T extends ValidComponent = \"p\">(\r\n  props: PolymorphicProps<T, DialogDescriptionProps>\r\n) => {\r\n  const [local, rest] = splitProps(props as DialogDescriptionProps, [\"class\"]);\r\n\r\n  return (\r\n    <DialogPrimitive.Description\r\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const DialogHeader = (props: ComponentProps<\"div\">) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\r\n  );\r\n};\r\n\r\nexport const DialogFooter = (props: ComponentProps<\"div\">) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <div\r\n      class={cn(\"flex flex-col-reverse sm:(flex-row justify-end space-x-2)\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}