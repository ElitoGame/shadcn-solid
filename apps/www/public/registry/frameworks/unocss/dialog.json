{
  "name": "dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type {\n  DialogContentProps,\n  DialogDescriptionProps,\n  DialogTitleProps\n} from \"@kobalte/core/dialog\";\nimport { Dialog as DialogPrimitive } from \"@kobalte/core/dialog\";\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const Dialog = DialogPrimitive;\nexport const DialogTrigger = DialogPrimitive.Trigger;\n\ntype dialogContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n  DialogContentProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const DialogContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, dialogContentProps<T>>\n) => {\n  const [local, rest] = splitProps(props as dialogContentProps, [\"class\", \"children\"]);\n\n  return (\n    <DialogPrimitive.Portal>\n      <DialogPrimitive.Overlay\n        class={cn(\n          \"fixed inset-0 z-50 bg-foreground/80 data-[expanded]:(animate-in fade-in-0) data-[closed]:(animate-out fade-out-0)\"\n        )}\n        {...rest}\n      />\n      <DialogPrimitive.Content\n        class={cn(\n          \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:(animate-in fade-in-0 zoom-in-95 slide-in-from-left-1/2 slide-in-from-top-48% duration-200) data-[closed]:(animate-out fade-out-0 zoom-out-95 slide-out-to-left-1/2 slide-out-to-top-48% duration-200) md:w-full sm:rounded-lg\",\n          local.class\n        )}\n        {...rest}\n      >\n        {local.children}\n        <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:(outline-none ring-1.5 ring-ring ring-offset-2) disabled:pointer-events-none bg-inherit transition-property-[opacity,box-shadow]\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M18 6L6 18M6 6l12 12\"\n            />\n          </svg>\n          <span class=\"sr-only\">Close</span>\n        </DialogPrimitive.CloseButton>\n      </DialogPrimitive.Content>\n    </DialogPrimitive.Portal>\n  );\n};\n\ntype dialogTitleProps<T extends ValidComponent = \"h2\"> = DialogTitleProps<T> & {\n  class?: string;\n};\n\nexport const DialogTitle = <T extends ValidComponent = \"h2\">(\n  props: PolymorphicProps<T, dialogTitleProps<T>>\n) => {\n  const [local, rest] = splitProps(props as dialogTitleProps, [\"class\"]);\n\n  return (\n    <DialogPrimitive.Title\n      class={cn(\"text-lg font-semibold text-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype dialogDescriptionProps<T extends ValidComponent = \"p\"> = DialogDescriptionProps<T> & {\n  class?: string;\n};\n\nexport const DialogDescription = <T extends ValidComponent = \"p\">(\n  props: PolymorphicProps<T, dialogDescriptionProps<T>>\n) => {\n  const [local, rest] = splitProps(props as dialogDescriptionProps, [\"class\"]);\n\n  return (\n    <DialogPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const DialogHeader = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", local.class)} {...rest} />\n  );\n};\n\nexport const DialogFooter = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:(flex-row justify-end space-x-2)\", local.class)}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}