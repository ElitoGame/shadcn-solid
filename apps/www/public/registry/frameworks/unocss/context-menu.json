{
  "name": "context-menu",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "context-menu.tsx",
      "content": "import { cn } from \"@/libs/cn\";\r\nimport { ContextMenu as ContextMenuPrimitive } from \"@kobalte/core\";\r\nimport type { ComponentProps, VoidProps } from \"solid-js\";\r\nimport { splitProps } from \"solid-js\";\r\n\r\nexport const ContextMenu = ContextMenuPrimitive.Root;\r\nexport const ContextMenuTrigger = ContextMenuPrimitive.Trigger;\r\nexport const ContextMenuGroup = ContextMenuPrimitive.Group;\r\nexport const ContextMenuSub = ContextMenuPrimitive.Sub;\r\nexport const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup;\r\n\r\nexport const ContextMenuSubTrigger = (\r\n  props: ContextMenuPrimitive.ContextMenuSubTriggerProps & {\r\n    inset?: boolean;\r\n  }\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"children\", \"inset\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.SubTrigger\r\n      class={cn(\r\n        \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[expanded]:(bg-accent text-accent-foreground)\",\r\n        local.inset && \"pl-8\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      {local.children}\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ml-auto h-4 w-4\" viewBox=\"0 0 24 24\">\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"m9 6l6 6l-6 6\"\r\n        />\r\n      </svg>\r\n    </ContextMenuPrimitive.SubTrigger>\r\n  );\r\n};\r\n\r\nexport const ContextMenuSubContent = (props: ContextMenuPrimitive.ContextMenuSubContentProps) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.Portal>\r\n      <ContextMenuPrimitive.SubContent\r\n        class={cn(\r\n          \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95)\",\r\n          local.class\r\n        )}\r\n        {...rest}\r\n      />\r\n    </ContextMenuPrimitive.Portal>\r\n  );\r\n};\r\n\r\nexport const ContextMenuContent = (props: ContextMenuPrimitive.ContextMenuContentProps) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.Portal>\r\n      <ContextMenuPrimitive.Content\r\n        class={cn(\r\n          \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:(animate-in fade-in-0 zoom-in-95) data-[closed]:(animate-out fade-out-0 zoom-out-95)\",\r\n          local.class\r\n        )}\r\n        {...rest}\r\n      />\r\n    </ContextMenuPrimitive.Portal>\r\n  );\r\n};\r\n\r\nexport const ContextMenuItem = (\r\n  props: ContextMenuPrimitive.ContextMenuItemProps & {\r\n    inset?: boolean;\r\n  }\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"inset\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.Item\r\n      class={cn(\r\n        \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\r\n        local.inset && \"pl-8\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ContextMenuCheckboxItem = (\r\n  props: ContextMenuPrimitive.ContextMenuCheckboxItemProps\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"children\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.CheckboxItem\r\n      class={cn(\r\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <ContextMenuPrimitive.ItemIndicator class=\"absolute left-2 inline-flex h-3.5 w-3.5 items-center justify-center\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-4 w-4\">\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            stroke-width=\"2\"\r\n            d=\"m5 12l5 5L20 7\"\r\n          />\r\n        </svg>\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n      {local.children}\r\n    </ContextMenuPrimitive.CheckboxItem>\r\n  );\r\n};\r\n\r\nexport const ContextMenuRadioItem = (props: ContextMenuPrimitive.ContextMenuRadioItemProps) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"children\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.RadioItem\r\n      class={cn(\r\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:(bg-accent text-accent-foreground) data-[disabled]:(pointer-events-none opacity-50)\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <ContextMenuPrimitive.ItemIndicator class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"h-2 w-2\">\r\n          <g fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\r\n            <path d=\"M0 0h24v24H0z\" />\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M7 3.34a10 10 0 1 1-4.995 8.984L2 12l.005-.324A10 10 0 0 1 7 3.34\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n      {local.children}\r\n    </ContextMenuPrimitive.RadioItem>\r\n  );\r\n};\r\n\r\nexport const ContextMenuItemLabel = (\r\n  props: ContextMenuPrimitive.ContextMenuItemLabelProps & {\r\n    inset?: boolean;\r\n  }\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"inset\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.ItemLabel\r\n      class={cn(\r\n        \"px-2 py-1.5 text-sm font-semibold text-foreground\",\r\n        local.inset && \"pl-8\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ContextMenuGroupLabel = (\r\n  props: ContextMenuPrimitive.ContextMenuGroupLabelProps & {\r\n    inset?: boolean;\r\n  }\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\", \"inset\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.GroupLabel\r\n      as=\"div\"\r\n      class={cn(\r\n        \"px-2 py-1.5 text-sm font-semibold text-foreground\",\r\n        local.inset && \"pl-8\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ContextMenuSeparator = (\r\n  props: VoidProps<ContextMenuPrimitive.ContextMenuSeparatorProps>\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <ContextMenuPrimitive.Separator\r\n      class={cn(\"-mx-1 my-1 h-px bg-border\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ContextMenuShortcut = (props: ComponentProps<\"span\">) => {\r\n  const [local, rest] = splitProps(props, [\"class\"]);\r\n\r\n  return (\r\n    <span\r\n      class={cn(\"ml-auto text-xs tracking-widest text-muted-foreground\", local.class)}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}