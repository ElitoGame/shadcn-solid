{
  "name": "otp-field",
  "dependencies": ["@corvu/otp-field"],
  "files": [
    {
      "name": "otp-field.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { DynamicProps, RootProps } from \"@corvu/otp-field\";\nimport OTPFieldPrimitive from \"@corvu/otp-field\";\nimport type { ComponentProps, ValidComponent } from \"solid-js\";\nimport { Show, splitProps } from \"solid-js\";\n\nexport const OTPFieldInput = OTPFieldPrimitive.Input;\n\ntype OTPFieldProps<T extends ValidComponent = \"div\"> = RootProps<T> & {\n  class?: string;\n};\n\nexport const OTPField = <T extends ValidComponent = \"div\">(\n  props: DynamicProps<T, OTPFieldProps<T>>\n) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return (\n    <OTPFieldPrimitive\n      class={cn(\"flex items-center gap-2 has-[:disabled]:opacity-50\", local.class)}\n      {...rest}\n    />\n  );\n};\n\nexport const OTPFieldGroup = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return <div class={cn(\"flex items-center\", local.class)} {...rest} />;\n};\n\nexport const OTPFieldSeparator = (props: ComponentProps<\"div\">) => {\n  return (\n    <div role=\"separator\" {...props}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"size-4\" viewBox=\"0 0 15 15\">\n        <title>Separator</title>\n        <path\n          fill=\"currentColor\"\n          fill-rule=\"evenodd\"\n          d=\"M5 7.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5\"\n          clip-rule=\"evenodd\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport const OTPFieldSlot = (props: ComponentProps<\"div\"> & { index: number }) => {\n  const [local, rest] = splitProps(props, [\"class\", \"index\"]);\n  const context = OTPFieldPrimitive.useContext();\n  const char = () => context.value()[local.index];\n  const hasFakeCaret = () => context.value().length === local.index && context.isInserting();\n  const isActive = () => context.activeSlots().includes(local.index);\n\n  return (\n    <div\n      class={cn(\n        \"relative flex size-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:(rounded-l-md border-l) last:rounded-r-md\",\n        isActive() && \"z-10 ring-1.5 ring-ring\",\n        local.class\n      )}\n      {...rest}\n    >\n      {char()}\n      <Show when={hasFakeCaret()}>\n        <div class=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div class=\"h-4 w-px animate-caret-blink bg-foreground\" />\n        </div>\n      </Show>\n    </div>\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}
