{
  "name": "pagination",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "pagination.tsx",
      "content": "import { cn } from \"@/lib/cn\"\r\nimport { Pagination as PaginationPrimitive } from \"@kobalte/core\"\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport type { ParentProps, VoidComponent } from \"solid-js\"\r\nimport { mergeProps, splitProps, type ParentComponent } from \"solid-js\"\r\nimport { buttonVariants } from \"./button\"\r\n\r\nexport const PaginationItems = PaginationPrimitive.Items\r\n\r\nexport const Pagination: ParentComponent<\r\n  PaginationPrimitive.PaginationRootProps\r\n> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n\r\n  return (\r\n    <PaginationPrimitive.Root\r\n      class={cn(\r\n        \"mx-auto flex w-full justify-center [&>ul]:flex [&>ul]:flex-row [&>ul]:items-center [&>ul]:gap-1\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const PaginationItem: ParentComponent<\r\n  PaginationPrimitive.PaginationItemProps &\r\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\r\n> = (props) => {\r\n  const merge = mergeProps<\r\n    ParentProps<\r\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\r\n        PaginationPrimitive.PaginationItemProps\r\n    >[]\r\n  >({ size: \"icon\" }, props)\r\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\r\n\r\n  return (\r\n    <PaginationPrimitive.Item\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"ghost\",\r\n          size: local.size,\r\n        }),\r\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const PaginationEllipsis: VoidComponent<\r\n  PaginationPrimitive.PaginationEllipsisProps\r\n> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n\r\n  return (\r\n    <PaginationPrimitive.Ellipsis\r\n      class={cn(\"flex h-9 w-9 items-center justify-center\", local.class)}\r\n      {...rest}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        class=\"h-4 w-4\"\r\n      >\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"M4 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0\"\r\n        />\r\n      </svg>\r\n      <span class=\"sr-only\">More pages</span>\r\n    </PaginationPrimitive.Ellipsis>\r\n  )\r\n}\r\n\r\nexport const PaginationPrevious: VoidComponent<\r\n  PaginationPrimitive.PaginationPreviousProps &\r\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\r\n> = (props) => {\r\n  const merge = mergeProps<\r\n    ParentProps<\r\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\r\n        PaginationPrimitive.PaginationItemProps\r\n    >[]\r\n  >({ size: \"icon\" }, props)\r\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\r\n\r\n  return (\r\n    <PaginationPrimitive.Previous\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"ghost\",\r\n          size: local.size,\r\n        }),\r\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        class=\"h-4 w-4\"\r\n      >\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"m15 6l-6 6l6 6\"\r\n        />\r\n      </svg>\r\n    </PaginationPrimitive.Previous>\r\n  )\r\n}\r\n\r\nexport const PaginationNext: VoidComponent<\r\n  PaginationPrimitive.PaginationNextProps &\r\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\r\n> = (props) => {\r\n  const merge = mergeProps<\r\n    ParentProps<\r\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\r\n        PaginationPrimitive.PaginationItemProps\r\n    >[]\r\n  >({ size: \"icon\" }, props)\r\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\r\n\r\n  return (\r\n    <PaginationPrimitive.Next\r\n      class={cn(\r\n        buttonVariants({\r\n          variant: \"ghost\",\r\n          size: local.size,\r\n        }),\r\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"h-4 w-4\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"m9 6l6 6l-6 6\"\r\n        />\r\n      </svg>\r\n    </PaginationPrimitive.Next>\r\n  )\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}
