{
	"name": "pagination",
	"dependencies": ["@kobalte/core"],
	"files": [
		{
			"name": "pagination.tsx",
			"content": "import { cn } from \"@/lib/cn\"\nimport { Pagination as PaginationPrimitive } from \"@kobalte/core\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport type { VoidComponent } from \"solid-js\"\nimport { mergeProps, splitProps, type ParentComponent } from \"solid-js\"\nimport { buttonVariants } from \"./button\"\n\nexport const PaginationItems = PaginationPrimitive.Items\n\nexport const Pagination: ParentComponent<\n\tPaginationPrimitive.PaginationRootProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\n\treturn (\n\t\t<PaginationPrimitive.Root\n\t\t\tclass={cn(\n\t\t\t\t\"mx-auto flex w-full justify-center [&>ul]:flex [&>ul]:flex-row [&>ul]:items-center [&>ul]:gap-1\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const PaginationItem: ParentComponent<\n\tPaginationPrimitive.PaginationItemProps &\n\t\tPick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n\tconst merge = mergeProps(\n\t\t{ size: \"icon\" } satisfies Pick<\n\t\t\tVariantProps<typeof buttonVariants>,\n\t\t\t\"size\"\n\t\t>,\n\t\tprops\n\t)\n\tconst [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n\treturn (\n\t\t<PaginationPrimitive.Item\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const PaginationEllipsis: VoidComponent<\n\tPaginationPrimitive.PaginationEllipsisProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\n\treturn (\n\t\t<PaginationPrimitive.Ellipsis\n\t\t\tclass={cn(\"flex h-9 w-9 items-center justify-center\", local.class)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<span class=\"icon-[tabler--dots] h-4 w-4\" />\n\t\t\t<span class=\"sr-only\">More pages</span>\n\t\t</PaginationPrimitive.Ellipsis>\n\t)\n}\n\nexport const PaginationPrevious: VoidComponent<\n\tPaginationPrimitive.PaginationPreviousProps &\n\t\tPick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n\tconst merge = mergeProps(\n\t\t{ size: \"icon\" } satisfies Pick<\n\t\t\tVariantProps<typeof buttonVariants>,\n\t\t\t\"size\"\n\t\t>,\n\t\tprops\n\t)\n\tconst [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n\treturn (\n\t\t<PaginationPrimitive.Previous\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<span class=\"icon-[tabler--chevron-left] h-4 w-4\" />\n\t\t</PaginationPrimitive.Previous>\n\t)\n}\n\nexport const PaginationNext: VoidComponent<\n\tPaginationPrimitive.PaginationNextProps &\n\t\tPick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n\tconst merge = mergeProps(\n\t\t{ size: \"icon\" } satisfies Pick<\n\t\t\tVariantProps<typeof buttonVariants>,\n\t\t\t\"size\"\n\t\t>,\n\t\tprops\n\t)\n\tconst [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n\treturn (\n\t\t<PaginationPrimitive.Next\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"ghost\",\n\t\t\t\t\tsize: local.size,\n\t\t\t\t}),\n\t\t\t\t\"aria-[current=page]:border aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:shadow-sm aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t<span class=\"icon-[tabler--chevron-right] h-4 w-4\" />\n\t\t</PaginationPrimitive.Next>\n\t)\n}\n"
		}
	],
	"type": "components:ui"
}
