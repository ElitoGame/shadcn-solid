{
  "name": "pagination",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "pagination.tsx",
      "content": "import { cn } from \"@/lib/cn\"\nimport { Pagination as PaginationPrimitive } from \"@kobalte/core\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport type { ParentProps, VoidComponent } from \"solid-js\"\nimport { mergeProps, splitProps, type ParentComponent } from \"solid-js\"\nimport { buttonVariants } from \"./button\"\n\nexport const PaginationItems = PaginationPrimitive.Items\n\nexport const Pagination: ParentComponent<\n  PaginationPrimitive.PaginationRootProps\n> = (props) => {\n  const [local, rest] = splitProps(props, [\"class\"])\n\n  return (\n    <PaginationPrimitive.Root\n      class={cn(\n        \"mx-auto flex w-full justify-center [&>ul]:flex [&>ul]:flex-row [&>ul]:items-center [&>ul]:gap-1\",\n        local.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nexport const PaginationItem: ParentComponent<\n  PaginationPrimitive.PaginationItemProps &\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n  const merge = mergeProps<\n    ParentProps<\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\n        PaginationPrimitive.PaginationItemProps\n    >[]\n  >({ size: \"icon\" }, props)\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n  return (\n    <PaginationPrimitive.Item\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\",\n          size: local.size,\n        }),\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\n        local.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nexport const PaginationEllipsis: VoidComponent<\n  PaginationPrimitive.PaginationEllipsisProps\n> = (props) => {\n  const [local, rest] = splitProps(props, [\"class\"])\n\n  return (\n    <PaginationPrimitive.Ellipsis\n      class={cn(\"flex h-9 w-9 items-center justify-center\", local.class)}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"h-4 w-4\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M4 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0\"\n        />\n      </svg>\n      <span class=\"sr-only\">More pages</span>\n    </PaginationPrimitive.Ellipsis>\n  )\n}\n\nexport const PaginationPrevious: VoidComponent<\n  PaginationPrimitive.PaginationPreviousProps &\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n  const merge = mergeProps<\n    ParentProps<\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\n        PaginationPrimitive.PaginationItemProps\n    >[]\n  >({ size: \"icon\" }, props)\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n  return (\n    <PaginationPrimitive.Previous\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\",\n          size: local.size,\n        }),\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\n        local.class\n      )}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        class=\"h-4 w-4\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"m15 6l-6 6l6 6\"\n        />\n      </svg>\n    </PaginationPrimitive.Previous>\n  )\n}\n\nexport const PaginationNext: VoidComponent<\n  PaginationPrimitive.PaginationNextProps &\n    Pick<VariantProps<typeof buttonVariants>, \"size\">\n> = (props) => {\n  const merge = mergeProps<\n    ParentProps<\n      Pick<VariantProps<typeof buttonVariants>, \"size\"> &\n        PaginationPrimitive.PaginationItemProps\n    >[]\n  >({ size: \"icon\" }, props)\n  const [local, rest] = splitProps(merge, [\"class\", \"size\"])\n\n  return (\n    <PaginationPrimitive.Next\n      class={cn(\n        buttonVariants({\n          variant: \"ghost\",\n          size: local.size,\n        }),\n        \"aria-[current=page]:border-input aria-[current=page]:bg-background aria-[current=page]:hover:bg-accent aria-[current=page]:hover:text-accent-foreground aria-[current=page]:border aria-[current=page]:shadow-sm\",\n        local.class\n      )}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"h-4 w-4\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"m9 6l6 6l-6 6\"\n        />\n      </svg>\n    </PaginationPrimitive.Next>\n  )\n}\n"
    }
  ],
  "type": "components:ui"
}
