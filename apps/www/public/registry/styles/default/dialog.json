{
  "name": "dialog",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "import { cn } from \"@/lib/cn\"\nimport { Dialog as DialogPrimitive } from \"@kobalte/core\"\nimport { TbX } from \"solid-icons/tb\"\nimport type { ComponentProps, ParentComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nexport const Dialog = DialogPrimitive.Root\nexport const DialogTrigger = DialogPrimitive.Trigger\n\nexport const DialogOverlay: ParentComponent<\n    DialogPrimitive.DialogOverlayProps\n> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Overlay\n            class={cn(\n                \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n\nexport const DialogContent: ParentComponent<\n    DialogPrimitive.DialogContentProps\n> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\", \"children\"])\n\n    return (\n        <DialogPrimitive.Portal>\n            <DialogOverlay />\n            <div class=\"fixed inset-0 z-50 flex justify-center items-center\">\n                <DialogPrimitive.Content\n                    class={cn(\n                        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95 data-[closed]:slide-out-to-left-1/2 data-[closed]:slide-out-to-top-[48%] data-[expanded]:slide-in-from-left-1/2 data-[expanded]:slide-in-from-top-[48%] sm:rounded-lg md:w-full\",\n                        local.class\n                    )}\n                    {...rest}\n                >\n                    {local.children}\n                    <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\">\n                        <TbX class=\"h-4 w-4\" />\n                        <span class=\"sr-only\">Close</span>\n                    </DialogPrimitive.CloseButton>\n                </DialogPrimitive.Content>\n            </div>\n        </DialogPrimitive.Portal>\n    )\n}\n\nexport const DialogTitle: ParentComponent<DialogPrimitive.DialogTitleProps> = (\n    props\n) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Title\n            class={cn(\"text-lg font-semibold text-foreground\", local.class)}\n            {...rest}\n        />\n    )\n}\n\nexport const DialogDescription: ParentComponent<\n    DialogPrimitive.DialogDescriptionProps\n> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Description\n            class={cn(\"text-sm text-muted-foreground\", local.class)}\n            {...rest}\n        />\n    )\n}\n\nexport const DialogHeader: ParentComponent<ComponentProps<\"div\">> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <div\n            class={cn(\n                \"flex flex-col space-y-2 text-center sm:text-left\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n\nexport const DialogFooter: ParentComponent<ComponentProps<\"div\">> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <div\n            class={cn(\n                \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n"
    }
  ],
  "type": "components:ui"
}