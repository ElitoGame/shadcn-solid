{
	"name": "alert-dialog",
	"dependencies": ["@kobalte/core"],
	"registryDependencies": ["button"],
	"files": [
		{
			"name": "alert-dialog.tsx",
			"content": "import { cn } from \"@/lib/cn\"\nimport { AlertDialog as AlertDialogPrimitive } from \"@kobalte/core\"\nimport type { ComponentProps } from \"solid-js\"\nimport { splitProps, type ParentComponent } from \"solid-js\"\nimport { buttonVariants } from \"./button\"\n\nexport const AlertDialog = AlertDialogPrimitive.Root\nexport const AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nexport const AlertDialogOverlay: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogOverlayProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\treturn (\n\t\t<AlertDialogPrimitive.Overlay\n\t\t\tclass={cn(\n\t\t\t\t\"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogContent: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogContentProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\n\treturn (\n\t\t<AlertDialogPrimitive.Portal>\n\t\t\t<AlertDialogOverlay />\n\t\t\t<div class=\"fixed flex justify-center items-center inset-0 z-50\">\n\t\t\t\t<AlertDialogPrimitive.Content\n\t\t\t\t\tclass={cn(\n\t\t\t\t\t\t\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 data-[closed]:zoom-out-95 data-[expanded]:zoom-in-95 data-[closed]:slide-out-to-left-1/2 data-[closed]:slide-out-to-top-[48%] data-[expanded]:slide-in-from-left-1/2 data-[expanded]:slide-in-from-top-[48%] sm:rounded-lg md:w-full\",\n\t\t\t\t\t\tlocal.class\n\t\t\t\t\t)}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</AlertDialogPrimitive.Portal>\n\t)\n}\n\nexport const AlertDialogHeader: ParentComponent<ComponentProps<\"div\">> = (\n\tprops\n) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogFooter: ParentComponent<ComponentProps<\"div\">> = (\n\tprops\n) => {\n\tconst [local, rest] = splitProps(props, [\"class\", \"classList\"])\n\treturn (\n\t\t<div\n\t\t\tclass={cn(\n\t\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogTitle: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogTitleProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\", \"classList\"])\n\treturn (\n\t\t<AlertDialogPrimitive.Title\n\t\t\tclass={cn(\"text-lg font-semibold\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogDescription: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogDescriptionProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\treturn (\n\t\t<AlertDialogPrimitive.Description\n\t\t\tclass={cn(\"text-sm text-muted-foreground\", local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogClose: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogCloseButtonProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\"])\n\treturn (\n\t\t<AlertDialogPrimitive.CloseButton\n\t\t\tclass={cn(\n\t\t\t\tbuttonVariants({\n\t\t\t\t\tvariant: \"outline\",\n\t\t\t\t}),\n\t\t\t\t\"mt-2 md:mt-0\",\n\t\t\t\tlocal.class\n\t\t\t)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport const AlertDialogAction: ParentComponent<\n\tAlertDialogPrimitive.AlertDialogCloseButtonProps\n> = (props) => {\n\tconst [local, rest] = splitProps(props, [\"class\", \"classList\"])\n\treturn (\n\t\t<AlertDialogPrimitive.CloseButton\n\t\t\tclass={cn(buttonVariants(), local.class)}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n"
		}
	],
	"type": "components:ui"
}
