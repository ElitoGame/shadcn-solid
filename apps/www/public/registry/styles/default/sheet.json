{
  "name": "sheet",
  "dependencies": ["@kobalte/core"],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import { cn } from \"@/lib/cn\"\r\nimport { Dialog as DialogPrimitive } from \"@kobalte/core\"\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport { cva } from \"class-variance-authority\"\r\nimport type { ComponentProps, ParentProps } from \"solid-js\"\r\nimport { mergeProps, splitProps, type ParentComponent } from \"solid-js\"\r\n\r\nexport const Sheet = DialogPrimitive.Root\r\nexport const SheetTrigger = DialogPrimitive.Trigger\r\n\r\nexport const SheetOverlay: ParentComponent<\r\n  DialogPrimitive.DialogOverlayProps\r\n> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      class={cn(\r\n        \"bg-background/80 data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0 fixed inset-0 z-50 backdrop-blur-sm\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:duration-300 data-[expanded]:duration-500\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)\r\n\r\nexport const SheetContent: ParentComponent<\r\n  DialogPrimitive.DialogContentProps & VariantProps<typeof sheetVariants>\r\n> = (props) => {\r\n  const merge = mergeProps<\r\n    ParentProps<\r\n      DialogPrimitive.DialogContentProps & VariantProps<typeof sheetVariants>\r\n    >[]\r\n  >({ side: \"right\" }, props)\r\n  const [local, rest] = splitProps(merge, [\"class\", \"children\", \"side\"])\r\n\r\n  return (\r\n    <DialogPrimitive.Portal>\r\n      <SheetOverlay />\r\n      <DialogPrimitive.Content\r\n        class={sheetVariants({ side: local.side, class: local.class })}\r\n        {...rest}\r\n      >\r\n        {local.children}\r\n        <DialogPrimitive.CloseButton class=\"ring-offset-background focus:ring-ring absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            class=\"h-4 w-4\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M18 6L6 18M6 6l12 12\"\r\n            />\r\n          </svg>\r\n          <span class=\"sr-only\">Close</span>\r\n        </DialogPrimitive.CloseButton>\r\n      </DialogPrimitive.Content>\r\n    </DialogPrimitive.Portal>\r\n  )\r\n}\r\n\r\nexport const SheetTitle: ParentComponent<DialogPrimitive.DialogTitleProps> = (\r\n  props\r\n) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <DialogPrimitive.Title\r\n      class={cn(\"text-foreground text-lg font-semibold\", local.class)}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const SheetDescription: ParentComponent<\r\n  DialogPrimitive.DialogDescriptionProps\r\n> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <DialogPrimitive.Description\r\n      class={cn(\"text-muted-foreground text-sm\", local.class)}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const SheetHeader: ParentComponent<ComponentProps<\"div\">> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <div\r\n      class={cn(\r\n        \"flex flex-col space-y-2 text-center sm:text-left\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const SheetFooter: ParentComponent<ComponentProps<\"div\">> = (props) => {\r\n  const [local, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <div\r\n      class={cn(\r\n        \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n        local.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}
