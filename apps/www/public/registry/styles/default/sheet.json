{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import { cn } from \"@/lib/cn\"\nimport { Dialog as DialogPrimitive } from \"@kobalte/core\"\nimport { IconX } from \"@tabler/icons-solidjs\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\nimport type { ComponentProps } from \"solid-js\"\nimport { mergeProps, splitProps, type ParentComponent } from \"solid-js\"\n\nexport const Sheet = DialogPrimitive.Root\nexport const SheetTrigger = DialogPrimitive.Trigger\n\nexport const SheetOverlay: ParentComponent<\n    DialogPrimitive.DialogOverlayProps\n> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Overlay\n            class={cn(\n                \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[expanded]:fade-in-0\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n\nexport const sheetVariants = cva(\n    \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[expanded]:animate-in data-[closed]:animate-out data-[closed]:duration-300 data-[expanded]:duration-500\",\n    {\n        variants: {\n            side: {\n                top: \"inset-x-0 top-0 border-b data-[closed]:slide-out-to-top data-[expanded]:slide-in-from-top\",\n                bottom: \"inset-x-0 bottom-0 border-t data-[closed]:slide-out-to-bottom data-[expanded]:slide-in-from-bottom\",\n                left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[closed]:slide-out-to-left data-[expanded]:slide-in-from-left sm:max-w-sm\",\n                right: \"inset-y-0 right-0 h-full w-3/4 border-l data-[closed]:slide-out-to-right data-[expanded]:slide-in-from-right sm:max-w-sm\",\n            },\n        },\n        defaultVariants: {\n            side: \"right\",\n        },\n    }\n)\n\nexport const SheetContent: ParentComponent<\n    DialogPrimitive.DialogContentProps & VariantProps<typeof sheetVariants>\n> = (props) => {\n    const merge = mergeProps(\n        { side: \"right\" } as VariantProps<typeof sheetVariants>,\n        props\n    )\n    const [local, rest] = splitProps(merge, [\"class\", \"children\", \"side\"])\n\n    return (\n        <DialogPrimitive.Portal>\n            <SheetOverlay />\n            <DialogPrimitive.Content\n                class={sheetVariants({ side: local.side, class: local.class })}\n                {...rest}\n            >\n                {local.children}\n                <DialogPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\">\n                    <IconX class=\"h-4 w-4\" />\n                    <span class=\"sr-only\">Close</span>\n                </DialogPrimitive.CloseButton>\n            </DialogPrimitive.Content>\n        </DialogPrimitive.Portal>\n    )\n}\n\nexport const SheetTitle: ParentComponent<DialogPrimitive.DialogTitleProps> = (\n    props\n) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Title\n            class={cn(\"text-lg font-semibold text-foreground\", local.class)}\n            {...rest}\n        />\n    )\n}\n\nexport const SheetDescription: ParentComponent<\n    DialogPrimitive.DialogDescriptionProps\n> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <DialogPrimitive.Description\n            class={cn(\"text-sm text-muted-foreground\", local.class)}\n            {...rest}\n        />\n    )\n}\n\nexport const SheetHeader: ParentComponent<ComponentProps<\"div\">> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <div\n            class={cn(\n                \"flex flex-col space-y-2 text-center sm:text-left\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n\nexport const SheetFooter: ParentComponent<ComponentProps<\"div\">> = (props) => {\n    const [local, rest] = splitProps(props, [\"class\"])\n    return (\n        <div\n            class={cn(\n                \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n                local.class\n            )}\n            {...rest}\n        />\n    )\n}\n"
    }
  ],
  "type": "components:ui"
}