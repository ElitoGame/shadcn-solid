import { writeFileSync } from "node:fs";
import { join } from "node:path";
import { registry } from "./utils";
import { frameworks } from "./utils/framework";
import { registrySchema } from "./utils/schema";

const REGISTRY_PATH = join(process.cwd(), "public/registry");

const result = registrySchema.safeParse(registry);
if (!result.success) {
	console.error(result.error);
	process.exit(1);
}

// ----------------------------------------------------------------------------
// Build __registry__/index.js.
// ----------------------------------------------------------------------------
let index = `// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import { lazy } from "solid-js"

export const Index = {
`;

for (const framework of frameworks) {
	if (framework.name === "unocss") {
		break;
	}
	index += `  "${framework.name}": {`;

	// Build style index.
	for (const item of result.data) {
		if (item.type === "components:example") {
			index += `
    "${item.name}": {
      name: "${item.name}",
      type: "${item.type}",
      registryDependencies: ${JSON.stringify(item.registryDependencies)},
      component: ${`lazy(() => import("../examples/${item.name}"))`}
    },`;
		}
	}

	index += `
  },`;
}

index += `
}
`;

// Write style index.
writeFileSync(join(process.cwd(), "src/__registry__/index.js"), index);
