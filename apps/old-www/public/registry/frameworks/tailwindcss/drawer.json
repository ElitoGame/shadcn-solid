{
  "name": "drawer",
  "dependencies": [
    "@corvu/drawer"
  ],
  "files": [
    {
      "name": "drawer.tsx",
      "content": "import { cn } from \"@/libs/cn\";\nimport type { ContentProps, DescriptionProps, DynamicProps, LabelProps } from \"@corvu/drawer\";\nimport DrawerPrimitive from \"@corvu/drawer\";\nimport type { ComponentProps, ParentProps, ValidComponent } from \"solid-js\";\nimport { splitProps } from \"solid-js\";\n\nexport const Drawer = DrawerPrimitive;\nexport const DrawerTrigger = DrawerPrimitive.Trigger;\nexport const DrawerClose = DrawerPrimitive.Close;\n\ntype drawerContentProps<T extends ValidComponent = \"div\"> = ParentProps<\n  ContentProps<T> & {\n    class?: string;\n  }\n>;\n\nexport const DrawerContent = <T extends ValidComponent = \"div\">(\n  props: DynamicProps<T, drawerContentProps<T>>\n) => {\n  const [local, rest] = splitProps(props as drawerContentProps, [\"class\", \"children\"]);\n  const ctx = DrawerPrimitive.useContext();\n\n  return (\n    <DrawerPrimitive.Portal>\n      <DrawerPrimitive.Overlay\n        class=\"fixed inset-0 z-50 data-[transitioning]:transition-colors data-[transitioning]:duration-200\"\n        style={{\n          \"background-color\": `rgb(0 0 0 / ${0.8 * ctx.openPercentage()})`\n        }}\n      />\n      <DrawerPrimitive.Content\n        class={cn(\n          \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-xl border bg-background after:absolute after:inset-x-0 after:top-full after:h-[50%] after:bg-inherit data-[transitioning]:transition-transform data-[transitioning]:duration-200 md:select-none\",\n          local.class\n        )}\n        {...rest}\n      >\n        <div class=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n        {local.children}\n      </DrawerPrimitive.Content>\n    </DrawerPrimitive.Portal>\n  );\n};\n\nexport const DrawerHeader = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return <div class={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", local.class)} {...rest} />;\n};\n\nexport const DrawerFooter = (props: ComponentProps<\"div\">) => {\n  const [local, rest] = splitProps(props, [\"class\"]);\n\n  return <div class={cn(\"mt-auto flex flex-col gap-2 p-4\", local.class)} {...rest} />;\n};\n\ntype DrawerLabelProps = LabelProps & {\n  class?: string;\n};\n\nexport const DrawerLabel = <T extends ValidComponent = \"h2\">(\n  props: DynamicProps<T, DrawerLabelProps>\n) => {\n  const [local, rest] = splitProps(props as DrawerLabelProps, [\"class\"]);\n\n  return (\n    <DrawerPrimitive.Label\n      class={cn(\"text-lg font-semibold leading-none tracking-tight\", local.class)}\n      {...rest}\n    />\n  );\n};\n\ntype DrawerDescriptionProps = DescriptionProps & {\n  class?: string;\n};\n\nexport const DrawerDescription = <T extends ValidComponent = \"p\">(\n  props: DynamicProps<T, DrawerDescriptionProps>\n) => {\n  const [local, rest] = splitProps(props as DrawerDescriptionProps, [\"class\"]);\n\n  return (\n    <DrawerPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", local.class)}\n      {...rest}\n    />\n  );\n};\n"
    }
  ],
  "type": "components:ui"
}